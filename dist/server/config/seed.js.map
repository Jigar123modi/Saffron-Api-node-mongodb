{"version":3,"sources":["config/seed.js"],"names":["seedDatabaseIfNeeded","seedDB","resolve","promises","all"],"mappings":"AAAA;;;;;AAKA;;;;;;;;;;kBASwBA,oB;;AARxB;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;AACA;;;;;;AAEe,SAASA,oBAAT,GAAgC;AAC3C,QAAI,CAAC,sBAAOC,MAAZ,EAAoB;AAChB,eAAO,kBAAQC,OAAR,EAAP;AACH;;AAGD,QAAIC,WAAW,EAAf;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyGA;AACA;AACA;AACA;AACA;AACA;;AAEA,WAAO,kBAAQC,GAAR,CAAYD,QAAZ,CAAP;AACH","file":"seed.js","sourcesContent":["/**\r\n * Populate DB with sample data on server start\r\n * to disable, edit config/environment/index.js, and set `seedDB: false`\r\n */\r\n\r\n'use strict';\r\nimport Thing from '../api/thing/thing.model';\r\nimport Oauth from '../api/oauth/oauth.model';\r\nimport Gallery from '../api/Gallery/Gallery.model';\r\nimport Service from '../api/Service/Service.model';\r\n\r\nimport {getGuid} from './commonHelper';\r\nimport config from './environment/';\r\n\r\nexport default function seedDatabaseIfNeeded() {\r\n    if (!config.seedDB) {\r\n        return Promise.resolve();\r\n    }\r\n\r\n\r\n    let promises = [];\r\n\r\n    // let thingPromise = Thing.find({}).remove()\r\n    //     .then(() => Thing.create({\r\n    //         name: 'Development Tools',\r\n    //         info: 'Integration with popular tools such as Webpack, Babel, TypeScript, Karma, Mocha, ESLint, Protractor, '\r\n    //         + 'Pug, Stylus, Sass, and Less.'\r\n    //     }, {\r\n    //         name: 'Server and Client integration',\r\n    //         info: 'Built with a powerful and fun stack: MongoDB, Express, Angular, and Node.'\r\n    //     }, {\r\n    //         name: 'Smart Build System',\r\n    //         info: 'Build system ignores `spec` files, allowing you to keep tests alongside code. Automatic injection of '\r\n    //         + 'scripts and styles into your app.html'\r\n    //     }, {\r\n    //         name: 'Modular Structure',\r\n    //         info: 'Best practice client and server structures allow for more code reusability and maximum scalability'\r\n    //     }, {\r\n    //         name: 'Optimized Build',\r\n    //         info: 'Build process packs up your templates as a single JavaScript payload, minifies your '\r\n    //         + 'scripts/css/images, and rewrites asset names for caching.'\r\n    //     }, {\r\n    //         name: 'Deployment Ready',\r\n    //         info: 'Easily deploy your app to Heroku or Openshift with the heroku and openshift subgenerators'\r\n    //     }))\r\n    //     .then(() => console.log('finished populating things'))\r\n    //     .catch(err => console.log('error populating things', err));\r\n\r\n\r\n    // let oauthPromise = Oauth.find({}).remove()\r\n    //     .then(() => Oauth.create({\r\n    //         id: getGuid(),\r\n    //         first_name: \"vicky\",\r\n    //         last_name: \"modi\",\r\n    //         contact_no: 8401060120,\r\n    //         email_id: \"vicky123modi@gmail.com\",\r\n    //         role: \"Admin\",\r\n    //         userId: '8401060120',\r\n    //         password: 'vicky123',\r\n    //         block: false\r\n    //     }))\r\n    //     .then(() => console.log('finished populating oauth'))\r\n    //     .catch(err => console.log('error populating oauth', err));\r\n\r\n    /*\r\n    let WebsiteHomePromise = WebsiteHome.find({}).remove()\r\n        .then(() => WebsiteHome.create(\r\n            {\r\n            id: getGuid(),\r\n            image_url: \"images/Slider1.png\",\r\n            visible:true\r\n        },{\r\n                id: getGuid(),\r\n                image_url: \"images/Slider2.jpg\",\r\n                visible:true\r\n            },\r\n            {\r\n                id: getGuid(),\r\n                image_url: \"images/Slider3.jpg\",\r\n                visible:true\r\n            }\r\n        ))\r\n        .then(() => console.log('finished populating WebsiteHome'))\r\n        .catch(err => console.log('error populating WebsiteHome', err));\r\n\r\n\r\n    let ServicePromise = Service.find({}).remove()\r\n        .then(() => Service.create(\r\n            {\r\n                id: getGuid(),\r\n                image_url: \"images/Slider1.png\",\r\n                title: \"service - 1\",\r\n                discription:\"Service Description - 1\"\r\n            },{\r\n                id: getGuid(),\r\n                image_url: \"images/Slider2.png\",\r\n                title: \"service - 2\",\r\n                discription:\"Service Description - 2\"\r\n            },\r\n            {\r\n                id: getGuid(),\r\n                image_url: \"images/Slider3.png\",\r\n                title: \"service - 3\",\r\n                discription:\"Service Description - 3\"\r\n            }\r\n        ))\r\n        .then(() => console.log('finished populating Service'))\r\n        .catch(err => console.log('error populating Service', err));\r\n\r\n\r\n\r\n    let TeamPromise = Team.find({}).remove()\r\n        .then(() => Team.create(\r\n            {\r\n                id: getGuid(),\r\n                image_url: \"images/Slider1.png\",\r\n                name: \"Vicky modi\",\r\n                description:\"Service Description - 1\"\r\n            },{\r\n                id: getGuid(),\r\n                image_url: \"images/Slider2.png\",\r\n                name: \"abc xyz\",\r\n                description:\"Service Description - 2\"\r\n            },\r\n            {\r\n                id: getGuid(),\r\n                image_url: \"images/Slider3.png\",\r\n                title: \"ayxz abc\",\r\n                description:\"Service Description - 3\"\r\n            }\r\n        ))\r\n        .then(() => console.log('finished populating Team'))\r\n        .catch(err => console.log('error populating Team', err));\r\n\r\n\r\n    let GalleryPromise = Gallery.find({}).remove()\r\n        .then(() => Gallery.create(\r\n            {\r\n                id: getGuid(),\r\n                service_id: getGuid(),\r\n                image_url: \"images/Slider1.png\",\r\n                title: \"title - 1\",\r\n                description:\"Description - 1\",\r\n                date: new Date().toISOString(),\r\n                sex: \"male\"\r\n            },{\r\n                id: getGuid(),\r\n                service_id: getGuid(),\r\n                image_url: \"images/Slider2.png\",\r\n                title: \"title - 2\",\r\n                description:\"Description - 2\",\r\n                date: new Date().toISOString(),\r\n                sex: \"female\"\r\n            },\r\n            {\r\n                id: getGuid(),\r\n                service_id: getGuid(),\r\n                image_url: \"images/Slider3.png\",\r\n                title: \"title - 3\",\r\n                description:\"Description - 3\",\r\n                date: new Date().toISOString(),\r\n                sex: \"male\"\r\n            }\r\n        ))\r\n        .then(() => console.log('finished populating Gallery'))\r\n        .catch(err => console.log('error populating Gallery', err));\r\n\r\n        */\r\n\r\n    //promises.push(thingPromise);\r\n    //promises.push(oauthPromise);\r\n    //promises.push(WebsiteHomePromise);\r\n    //promises.push(ServicePromise);\r\n    //promises.push(GalleryPromise);\r\n    //promises.push(TeamPromise);\r\n\r\n    return Promise.all(promises);\r\n}\r\n"]}
{"version":3,"sources":["api/SliderImages/SliderImages.controller.js"],"names":["req","res","SliderList","status","json","find","exec","index","addNewSliderImage","deleteSliderImage","formidable","require","fs","fs_extra","isImage","next","form","IncomingForm","parse","err","fields","files","length","filetoupload","name","uuid","oldpath","path","newpath","dbpath","renameFilePath","move","toString","rename","SliderImageNewAdd","id","image_url","save","then","InsertSlider","data","result","Error","params","sliderImageId","remove","DeleteSliderImage","n"],"mappings":"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","file":"SliderImages.controller.js","sourcesContent":["import SliderImages from './SliderImages.model';\r\nimport {errorJsonResponse, SliderImageUploadLocation, getGuid, setCache, getCache} from '../../config/commonHelper';\r\n\r\nvar formidable = require('formidable');\r\nvar fs = require('fs');\r\nvar fs_extra = require('fs-extra');\r\nconst isImage = require('is-image');\r\n\r\n// Gets a list of SliderImages\r\nexport async function index(req, res) {\r\n    let SliderList = getCache('sliderLists');\r\n    if(SliderList !== null) {\r\n        res.status(200).json(SliderList);\r\n    } else {\r\n        SliderList = await SliderImages.find().exec();\r\n        setCache('sliderLists', SliderList);\r\n        res.status(200).json(SliderList);\r\n    }\r\n}\r\n\r\n// Add New SliderImagess\r\nexport function addNewSliderImage(req, res, next) {\r\n    try {\r\n        let form = new formidable.IncomingForm();\r\n        form.parse(req, function (err, fields, files) {\r\n            if (Object.keys(files).length > 0 && isImage(files.filetoupload.name)) {\r\n                let uuid = getGuid();\r\n                let oldpath = files.filetoupload.path;\r\n                let newpath = SliderImageUploadLocation.path + files.filetoupload.name;\r\n                let dbpath = SliderImageUploadLocation.dbpath + uuid + files.filetoupload.name;\r\n                let renameFilePath = SliderImageUploadLocation.path + uuid + files.filetoupload.name;\r\n\r\n                fs_extra.move(oldpath, newpath, function (err) {\r\n                    if (err) {\r\n                        res.status(400)\r\n                            .json(errorJsonResponse(err.toString(), \"Same Name Image Already Available On Server\"));\r\n                    } else {\r\n                        fs.rename(newpath, renameFilePath, function (err) {\r\n                            if (err) {\r\n                                res.status(400).json(errorJsonResponse(err.toString(), \"Fail to Rename file\"));\r\n                            } else {\r\n                                let SliderImageNewAdd = new SliderImages({\r\n                                    id: getGuid(),\r\n                                    image_url: dbpath\r\n                                });\r\n                                SliderImageNewAdd.save()\r\n                                    .then(function (InsertSlider, err) {\r\n                                        if (!err) {\r\n                                            if (InsertSlider) {\r\n                                                setCache('sliderLists',null);\r\n                                                res.status(200)\r\n                                                    .json({\r\n                                                        data: InsertSlider,\r\n                                                        result: \"Save Successfully\"\r\n                                                    });\r\n                                            } else {\r\n                                                res.status(400)\r\n                                                    .json(errorJsonResponse(\"Error in db response\", \"Invalid_Image\"));\r\n                                            }\r\n                                        } else {\r\n                                            res.status(400)\r\n                                                .json(errorJsonResponse(err, \"Contact to your Developer\"));\r\n                                        }\r\n                                    });\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n\r\n            } else {\r\n                res.status(400).json(errorJsonResponse(\"Invalid Request\", \"Invalid Request\"));\r\n            }\r\n        });\r\n    }\r\n    catch (Error) {\r\n        res.status(400).json(errorJsonResponse(Error.toString(), \"Invalid Image\"));\r\n    }\r\n}\r\n\r\nexport function deleteSliderImage(req, res) {\r\n    if (req.params.sliderImageId) {\r\n        let sliderImageId = req.params.sliderImageId;\r\n        SliderImages.remove({id: sliderImageId})\r\n            .exec(function (err, DeleteSliderImage) {\r\n                if (!err) {\r\n                    if (DeleteSliderImage) {\r\n                        if (DeleteSliderImage.result.n === 1) {\r\n                            setCache('sliderLists',null);\r\n                            res.status(200)\r\n                                .json({id: sliderImageId, result: \"Deleted Successfully\"});\r\n                        } else {\r\n                            res.status(400)\r\n                                .json(errorJsonResponse(\"Deleted Fail\", \"Deleted Fail\"));\r\n                        }\r\n                    } else {\r\n                        res.status(400)\r\n                            .json(errorJsonResponse(\"Invalid Post\", \"Invalid Post\"));\r\n                    }\r\n                } else {\r\n                    res.status(400)\r\n                        .json(errorJsonResponse(err, \"Contact to your Developer\"));\r\n                }\r\n            });\r\n    } else {\r\n        res.status(400)\r\n            .json(errorJsonResponse(\"Id is required\", \"Id is required\"));\r\n    }\r\n}\r\n"]}
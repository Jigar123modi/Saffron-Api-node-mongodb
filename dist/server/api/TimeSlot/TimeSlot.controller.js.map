{"version":3,"sources":["api/TimeSlot/TimeSlot.controller.js"],"names":["index","getAllTimeSlot","addTimeSlot","editTimeSlot","deleteTimeSlot","respondWithResult","res","statusCode","entity","status","json","handleError","err","send","req","timeSlotListResponse","find","__v","_id","then","timeSlotList","forEach","timeSlot","currentDate","Date","year","getFullYear","month","getMonth","date","getDate","split","end_time","timeSlotEndingTime","getTime","push","next","error","console","log","body","start_time","TimeSlotAdd","id","save","InsertTimeSlot","data","result","message","toString","requestObj","update","exec","updateTimeSlot","nModified","n","timeSlot_id","params","remove","DeleteTimeSlot"],"mappings":"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","file":"TimeSlot.controller.js","sourcesContent":["import TimeSlot from './TimeSlot.model';\r\nimport {errorJsonResponse, getGuid} from '../../config/commonHelper';\r\n\r\nfunction respondWithResult(res, statusCode) {\r\n    statusCode = statusCode || 200;\r\n    return function (entity) {\r\n        if (entity) {\r\n            return res.status(statusCode).json(entity);\r\n        }\r\n        return null;\r\n    };\r\n}\r\n\r\nfunction handleError(res, statusCode) {\r\n    statusCode = statusCode || 500;\r\n    return function (err) {\r\n        res.status(statusCode).send(err);\r\n    };\r\n}\r\n\r\n// Gets a list of TimeSlots\r\nexport function index(req, res) {\r\n    let timeSlotListResponse = [];\r\n    return TimeSlot.find({}, {__v: 0, _id: 0}).then((timeSlotList, err) => {\r\n        if (!err) {\r\n            timeSlotList.forEach((timeSlot) => {\r\n                let currentDate = new Date();\r\n                let year = currentDate.getFullYear();\r\n                let month = currentDate.getMonth();\r\n                let date = currentDate.getDate();\r\n                let split = timeSlot.end_time.split(\":\");\r\n                let timeSlotEndingTime = new Date(year, month, date, split[0], split[1], 0);\r\n                if (!(currentDate.getTime() > timeSlotEndingTime.getTime())) {\r\n                    timeSlotListResponse.push(timeSlot);\r\n                }\r\n            });\r\n            res.status(200).json(timeSlotListResponse);\r\n        } else {\r\n            res.status(400)\r\n                .json(errorJsonResponse(err, \"Contact to your Developer\"));\r\n        }\r\n    });\r\n}\r\n\r\nexport function getAllTimeSlot(req, res, next) {\r\n    try {\r\n        return TimeSlot.find({}, {__v: 0, _id: 0}).then((timeSlotList, err) => {\r\n            if (!err) {\r\n                res.status(200).json(timeSlotList);\r\n            } else {\r\n                res.status(400)\r\n                    .json(errorJsonResponse(err, \"Contact to your Developer\"));\r\n            }\r\n        });\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\n\r\nexport function addTimeSlot(req, res, next) {\r\n    try {\r\n        if (req.body) {\r\n\r\n            let start_time = req.body.start_time;\r\n            let end_time = req.body.end_time;\r\n\r\n            let TimeSlotAdd = new TimeSlot({\r\n                id: getGuid(),\r\n                start_time: start_time,\r\n                end_time: end_time\r\n            });\r\n            TimeSlotAdd.save()\r\n                .then(function (InsertTimeSlot, err) {\r\n                    if (!err) {\r\n                        if (InsertTimeSlot) {\r\n                            res.status(200)\r\n                                .json({\r\n                                    data: InsertTimeSlot,\r\n                                    result: \"Save Successfully\"\r\n                                });\r\n                        } else {\r\n                            res.status(400)\r\n                                .json(errorJsonResponse(\"Error in db response\", \"Invalid_Image\"));\r\n                        }\r\n                    } else {\r\n                        res.status(400)\r\n                            .json(errorJsonResponse(err, \"Contact to your Developer\"));\r\n                    }\r\n                });\r\n        }\r\n    } catch (err) {\r\n        res.status(400).json(errorJsonResponse(err.message.toString(), err.message.toString()));\r\n    }\r\n}\r\n\r\nexport function editTimeSlot(req, res, next) {\r\n    try {\r\n\r\n        let requestObj = {\r\n            id: req.body.id,\r\n            start_time: req.body.start_time,\r\n            end_time: req.body.end_time,\r\n        };\r\n\r\n        TimeSlot.update({id: requestObj.id}, {\r\n            start_time: requestObj.start_time,\r\n            end_time: requestObj.end_time\r\n        }).exec((error, updateTimeSlot) => {\r\n            if (!error) {\r\n                if (updateTimeSlot) {\r\n                    if (updateTimeSlot.nModified === 1 || updateTimeSlot.n === 1) {\r\n                        res.status(200).json({\r\n                            data: requestObj,\r\n                            result: \"updated Successfully\"\r\n                        });\r\n                    } else {\r\n                        res.status(400)\r\n                            .json(errorJsonResponse(\"not found\", \"not found\"));\r\n                    }\r\n                }\r\n            } else {\r\n                res.status(400)\r\n                    .json(errorJsonResponse(error, \"Contact to your Developer\"));\r\n            }\r\n        });\r\n\r\n    } catch (err) {\r\n        res.status(400).json(errorJsonResponse(err.message.toString(), err.message.toString()));\r\n    }\r\n}\r\n\r\nexport function deleteTimeSlot(req, res, next) {\r\n    try {\r\n        let timeSlot_id = req.params.timeSlot_id;\r\n        TimeSlot.remove({id: timeSlot_id})\r\n            .exec(function (err, DeleteTimeSlot) {\r\n                if (!err) {\r\n                    if (DeleteTimeSlot) {\r\n                        if (DeleteTimeSlot.result.n === 1) {\r\n                            res.status(200)\r\n                                .json({timeSlot_id: timeSlot_id, result: \"Deleted Successfully\"});\r\n                        } else {\r\n                            res.status(400)\r\n                                .json(errorJsonResponse(\"Deleted Fail\", \"Deleted Fail\"));\r\n                        }\r\n                    } else {\r\n                        res.status(400)\r\n                            .json(errorJsonResponse(\"Invalid Record\", \"Invalid Record\"));\r\n                    }\r\n                } else {\r\n                    res.status(400)\r\n                        .json(errorJsonResponse(err, \"Contact to your Developer\"));\r\n                }\r\n            });\r\n    } catch (err) {\r\n        res.status(400).json(errorJsonResponse(err.message.toString(), err.message.toString()));\r\n    }\r\n}\r\n"]}
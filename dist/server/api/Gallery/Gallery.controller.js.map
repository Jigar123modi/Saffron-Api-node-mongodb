{"version":3,"sources":["api/Gallery/Gallery.controller.js"],"names":["req","res","GalleryList","status","json","find","_id","__v","sort","date","limit","exec","index","service_id","uniqueId","singleServiceGalleryList","filter","data","getGalleryList","writeLog","eLogLevel","error","params","serviceId","galleryList","allGallery","deleteGallery","addNewGallery","updateGallery","formidable","require","fs","fs_extra","isImage","galleryId","remove","id","err","DeleteGallery","result","n","next","form","IncomingForm","parse","fields","files","length","title","description","sex","filetoupload","name","uuid","oldpath","path","newpath","dbpath","renameFilePath","toLowerCase","findOne","findService","move","toString","rename","GalleryNewAdd","image_url","Date","toISOString","save","then","InsertService","Error","response","update","UpdateGallery","nModified"],"mappings":"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","file":"Gallery.controller.js","sourcesContent":["import Gallery from './Gallery.model';\r\nimport Service from '../Service/Service.model';\r\nimport {errorJsonResponse, GalleryImageUploadLocation, getCache, getGuid, setCache} from '../../config/commonHelper';\r\nimport Log from '../../config/Log';\r\n\r\nvar formidable = require('formidable');\r\nvar fs = require('fs');\r\nvar fs_extra = require('fs-extra');\r\nconst isImage = require('is-image');\r\n\r\n\r\n// Gets a list of Gallery\r\nexport async function index(req, res) {\r\n    let GalleryList = getCache('galleryLists');\r\n    if(GalleryList !== null) {\r\n        res.status(200).json(GalleryList);\r\n    } else {\r\n        GalleryList = await Gallery.find({}, {_id: 0, __v: 0}).sort({date: -1}).limit(8).exec();\r\n        setCache('galleryLists', GalleryList);\r\n        res.status(200).json(GalleryList);\r\n    }\r\n}\r\n\r\nasync function getGalleryList(service_id, uniqueId, index = 0) {\r\n    let GalleryList = getCache('galleryList');\r\n    if(GalleryList !== null) {\r\n        let singleServiceGalleryList = GalleryList.filter((data) => data.service_id === service_id);\r\n        if(singleServiceGalleryList) {\r\n            return singleServiceGalleryList;\r\n        } else {\r\n            if(index === 0) {\r\n                GalleryList = Gallery.find({}, {_id: 0, __v: 0}).sort({date: -1}).exec();\r\n                setCache('galleryList', GalleryList);\r\n                return getGalleryList(service_id,uniqueId, 1);\r\n            } else {\r\n                Log.writeLog(Log.eLogLevel.error, `[getGalleryList] : Record not found Service_Id = ${service_id}`, uniqueId);\r\n                return null;\r\n            }\r\n        }\r\n    } else {\r\n        GalleryList = await Gallery.find({}, {_id: 0, __v: 0}).sort({date: -1}).exec();\r\n        setCache('galleryList', GalleryList);\r\n        return getGalleryList(service_id,uniqueId, 1);\r\n    }\r\n}\r\n\r\n\r\n// Gets all the Gallery\r\nexport async function allGallery(req, res) {\r\n    if(req.params.serviceId) {\r\n        const uniqueId = getGuid();\r\n        const galleryList = await getGalleryList(req.params.serviceId, uniqueId);\r\n        res.status(200).json(galleryList);\r\n    }\r\n}\r\n\r\n\r\nexport function deleteGallery(req, res) {\r\n    if (req.params.galleryId) {\r\n        let galleryId = req.params.galleryId;\r\n        Gallery.remove({id: galleryId})\r\n            .exec(function (err, DeleteGallery) {\r\n                if (!err) {\r\n                    if (DeleteGallery) {\r\n                        if (DeleteGallery.result.n === 1) {\r\n                            setCache('galleryList', null);\r\n                            setCache('galleryLists', null);\r\n                            res.status(200)\r\n                                .json({id: galleryId, result: \"Deleted Successfully\"});\r\n                        } else {\r\n                            res.status(400)\r\n                                .json(errorJsonResponse(\"Deleted Fail\", \"Deleted Fail\"));\r\n                        }\r\n\r\n                    } else {\r\n                        res.status(400)\r\n                            .json(errorJsonResponse(\"Invalid Post\", \"Invalid Post\"));\r\n                    }\r\n                } else {\r\n                    res.status(400)\r\n                        .json(errorJsonResponse(err, \"Contact to your Developer\"));\r\n                }\r\n            });\r\n    } else {\r\n        res.status(400)\r\n            .json(errorJsonResponse(\"Id is required\", \"Id is required\"));\r\n    }\r\n}\r\n\r\nexport function addNewGallery(req, res, next) {\r\n    try {\r\n\r\n        let form = new formidable.IncomingForm();\r\n        form.parse(req, function (err, fields, files) {\r\n            if (Object.keys(files).length > 0 && fields.title && fields.description && fields.service_id && fields.sex && isImage(files.filetoupload.name)) {\r\n                let uuid = getGuid();\r\n                let oldpath = files.filetoupload.path;\r\n                let newpath = GalleryImageUploadLocation.path + files.filetoupload.name;\r\n                let dbpath = GalleryImageUploadLocation.dbpath + uuid + files.filetoupload.name;\r\n                let renameFilePath = GalleryImageUploadLocation.path + uuid + files.filetoupload.name;\r\n                let service_id = fields.service_id;\r\n                let title = fields.title.toLowerCase();\r\n                let description = fields.description.toLowerCase();\r\n                let sex = fields.sex.toLowerCase();\r\n\r\n                Service.findOne({id: service_id}).exec(function (err, findService) {\r\n                    if (findService) {\r\n                        fs_extra.move(oldpath, newpath, function (err) {\r\n                            if (err) {\r\n                                res.status(400)\r\n                                    .json(errorJsonResponse(err.toString(), \"Same Name Image Already Available On Server\"));\r\n                            } else {\r\n                                fs.rename(newpath, renameFilePath, function (err) {\r\n                                    if (err) {\r\n                                        res.status(400).json(errorJsonResponse(err.toString(), \"Fail to Rename file\"));\r\n                                    } else {\r\n                                        let GalleryNewAdd = new Gallery({\r\n                                            id: getGuid(),\r\n                                            service_id: service_id,\r\n                                            image_url: dbpath,\r\n                                            title: title,\r\n                                            description: description,\r\n                                            date: new Date().toISOString(),\r\n                                            sex: sex\r\n                                        });\r\n                                        GalleryNewAdd.save()\r\n                                            .then(function (InsertService, err) {\r\n                                                if (!err) {\r\n                                                    if (InsertService) {\r\n                                                        setCache('galleryList', null);\r\n                                                        setCache('galleryLists', null);\r\n                                                        res.status(200)\r\n                                                            .json({\r\n                                                                data: InsertService,\r\n                                                                result: \"Save Successfully\"\r\n                                                            });\r\n                                                    } else {\r\n                                                        res.status(400)\r\n                                                            .json(errorJsonResponse(\"Error in db response\", \"Invalid_Image\"));\r\n                                                    }\r\n                                                } else {\r\n                                                    res.status(400)\r\n                                                        .json(errorJsonResponse(err, \"Contact to your Developer\"));\r\n                                                }\r\n                                            });\r\n                                    }\r\n                                });\r\n                            }\r\n                        });\r\n                    } else {\r\n                        res.status(400)\r\n                            .json(errorJsonResponse(\"Service Not Found \", \"Service Not Found\"));\r\n                    }\r\n                });\r\n            } else {\r\n                res.status(400).json(errorJsonResponse(\"Invalid Request\", \"Invalid Request\"));\r\n            }\r\n        });\r\n    }\r\n    catch (Error) {\r\n        res.status(400).json(errorJsonResponse(Error.toString(), \"Invalid Image\"));\r\n    }\r\n}\r\n\r\nexport function updateGallery(req, res, next) {\r\n    try {\r\n        var form = new formidable.IncomingForm();\r\n        form.parse(req, function (err, fields, files) {\r\n\r\n            if (fields.title && fields.description && fields.service_id && fields.sex && fields.id) {\r\n\r\n                if (files.filetoupload && isImage(files.filetoupload.name)) {\r\n                    let uuid = getGuid();\r\n                    let oldpath = files.filetoupload.path;\r\n                    let newpath = GalleryImageUploadLocation.path + files.filetoupload.name;\r\n                    let dbpath = GalleryImageUploadLocation.dbpath + uuid + files.filetoupload.name;\r\n                    let renameFilePath = GalleryImageUploadLocation.path + uuid + files.filetoupload.name;\r\n                    let service_id = fields.service_id;\r\n                    let id = fields.id;\r\n                    let title = fields.title.toLowerCase();\r\n                    let description = fields.description.toLowerCase();\r\n                    let sex = fields.sex.toLowerCase();\r\n\r\n                    let response = {\r\n                        id,\r\n                        service_id,\r\n                        image_url: dbpath,\r\n                        title,\r\n                        description,\r\n                        sex\r\n                    };\r\n\r\n                    Service.findOne({id: service_id}).exec(function (err, findService) {\r\n                        if (findService) {\r\n                            fs_extra.move(oldpath, newpath, function (err) {\r\n                                if (err) {\r\n                                    res.status(400)\r\n                                        .json(errorJsonResponse(err.toString(), \"Same Name Image Already Available On Server\"));\r\n                                } else {\r\n                                    fs.rename(newpath, renameFilePath, function (err) {\r\n                                        if (err) {\r\n                                            res.status(400).json(errorJsonResponse(err.toString(), \"Fail to Rename file\"));\r\n                                        } else {\r\n\r\n                                            Gallery.update({id: id}, {\r\n                                                service_id: service_id,\r\n                                                image_url: dbpath,\r\n                                                title: title,\r\n                                                description: description,\r\n                                                date: new Date().toISOString(),\r\n                                                sex: sex\r\n                                            }).exec(function (err, UpdateGallery) {\r\n                                                if (!err) {\r\n                                                    if (UpdateGallery) {\r\n                                                        if (UpdateGallery.nModified === 1 || UpdateGallery.n === 1) {\r\n                                                            setCache('galleryList', null);\r\n                                                            setCache('galleryLists', null);\r\n                                                            res.status(200)\r\n                                                                .json({\r\n                                                                    data: response,\r\n                                                                    result: \"updated Successfully \"\r\n                                                                });\r\n\r\n                                                        } else {\r\n                                                            res.status(400)\r\n                                                                .json(errorJsonResponse(\"Record not found\", \"Record not found\"));\r\n                                                        }\r\n\r\n                                                    } else {\r\n                                                        res.status(400)\r\n                                                            .json(errorJsonResponse(\"Invalid_Image\", \"Invalid_Image\"));\r\n                                                    }\r\n                                                } else {\r\n                                                    res.status(400)\r\n                                                        .json(errorJsonResponse(err, \"Contact to your Developer\"));\r\n                                                }\r\n                                            });\r\n                                        }\r\n                                    });\r\n                                }\r\n                            });\r\n                        } else {\r\n                            res.status(400)\r\n                                .json(errorJsonResponse(\"Service Not Found \", \"Service Not Found\"));\r\n                        }\r\n                    });\r\n\r\n                } else {\r\n\r\n                    let service_id = fields.service_id;\r\n                    let id = fields.id;\r\n                    let title = fields.title.toLowerCase();\r\n                    let description = fields.description.toLowerCase();\r\n                    let sex = fields.sex.toLowerCase();\r\n\r\n                    let response = {\r\n                        id,\r\n                        service_id,\r\n                        title,\r\n                        description,\r\n                        sex\r\n                    };\r\n\r\n\r\n                    Service.findOne({id: service_id}).exec(function (err, findService) {\r\n                        if (findService) {\r\n                            Gallery.update({id: id}, {\r\n                                service_id: service_id,\r\n                                title: title,\r\n                                description: description,\r\n                                sex: sex\r\n                            }).exec(function (err, UpdateGallery) {\r\n                                if (!err) {\r\n                                    if (UpdateGallery) {\r\n                                        if (UpdateGallery.nModified === 1 || UpdateGallery.n === 1) {\r\n                                            setCache('galleryList', null);\r\n                                            setCache('galleryLists', null);\r\n                                            res.status(200)\r\n                                                .json({\r\n                                                    data: response,\r\n                                                    result: \"updated Successfully \"\r\n                                                });\r\n\r\n                                        } else {\r\n                                            res.status(400)\r\n                                                .json(errorJsonResponse(\"Record not found\", \"Record not found\"));\r\n                                        }\r\n                                    } else {\r\n                                        res.status(400)\r\n                                            .json(errorJsonResponse(\"Invalid_Image\", \"Invalid_Image\"));\r\n                                    }\r\n                                } else {\r\n                                    res.status(400)\r\n                                        .json(errorJsonResponse(err, \"Contact to your Developer\"));\r\n                                }\r\n                            });\r\n                        } else {\r\n                            res.status(400)\r\n                                .json(errorJsonResponse(\"Service Not Found \", \"Service Not Found\"));\r\n                        }\r\n                    });\r\n                }\r\n            } else {\r\n                res.status(400).json(errorJsonResponse(\"Invalid Request\", \"Invalid Request\"));\r\n            }\r\n        });\r\n    }\r\n    catch (Error) {\r\n        res.status(400).json(errorJsonResponse(Error.toString(), \"Invalid Image\"));\r\n    }\r\n}\r\n"]}
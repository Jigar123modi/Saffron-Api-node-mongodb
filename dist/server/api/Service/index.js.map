{"version":3,"sources":["api/Service/index.js"],"names":["express","require","controller","router","Router","get","index","delete","validateAuthorization","deleteServiceId","deleteService","post","addNewService","put","updateService","testingPublishSocket","use","err","req","res","next","arrayMessages","allErrorField","i","errors","length","Single_error","messages","toString","replace","push","join","status","json","module","exports"],"mappings":";;AAEA;;;;AACA;;;;AACA;;;;AAJA,IAAIA,UAAUC,QAAQ,SAAR,CAAd;AACA,IAAIC,aAAaD,QAAQ,sBAAR,CAAjB;;;AAKA,IAAIE,SAASH,QAAQI,MAAR,EAAb;;AAEA;AACAD,OAAOE,GAAP,CAAW,GAAX,EAAgBH,WAAWI,KAA3B;;AAEA;AACAH,OAAOI,MAAP,CAAc,aAAd,EAA6B,qBAAYC,qBAAzC,EAAgE,iCAAS,qBAAYC,eAArB,CAAhE,EAAuGP,WAAWQ,aAAlH;;AAEA;AACAP,OAAOQ,IAAP,CAAY,GAAZ,EAAiB,qBAAYH,qBAA7B,EAAoDN,WAAWU,aAA/D;;AAEA;AACAT,OAAOU,GAAP,CAAW,GAAX,EAAgB,qBAAYL,qBAA5B,EAAmDN,WAAWY,aAA9D;;AAEA;AACAX,OAAOQ,IAAP,CAAY,gBAAZ,EAA8BT,WAAWa,oBAAzC;;AAGAZ,OAAOa,GAAP,CAAW,UAAUC,GAAV,EAAeC,GAAf,EAAoBC,GAApB,EAAyBC,IAAzB,EAA+B;AACtC,QAAIC,gBAAgB,EAApB;AACA,QAAIC,aAAJ;AACA,SAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIN,IAAIO,MAAJ,CAAWC,MAA/B,EAAuCF,GAAvC,EAA4C;AACxC,YAAIG,eAAeT,IAAIO,MAAJ,CAAWD,CAAX,EAAcI,QAAd,CAAuBC,QAAvB,GAAkCC,OAAlC,CAA0C,IAA1C,EAAgD,EAAhD,CAAnB;AACAR,sBAAcS,IAAd,CAAmBJ,YAAnB;AACH;AACDJ,oBAAgBD,cAAcU,IAAd,CAAmB,GAAnB,CAAhB;AACAZ,QAAIa,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,qCAAkBX,aAAlB,EAAiCA,aAAjC,CAArB;AACH,CATD;;AAYAY,OAAOC,OAAP,GAAiBhC,MAAjB","file":"index.js","sourcesContent":["var express = require('express');\r\nvar controller = require('./Service.controller');\r\nimport validations from './validation';\r\nimport validate from 'express-validation';\r\nimport {errorJsonResponse} from '../../config/commonHelper';\r\n\r\nvar router = express.Router();\r\n\r\n// 01. GET   /api/Services/\r\nrouter.get('/', controller.index);\r\n\r\n// 02. DELETE   /api/Services/:ID\r\nrouter.delete('/:serviceId', validations.validateAuthorization, validate(validations.deleteServiceId), controller.deleteService);\r\n\r\n// 03. ADD NEW   /api/Services/\r\nrouter.post('/', validations.validateAuthorization, controller.addNewService);\r\n\r\n// 04. UPDATE   /api/Services/\r\nrouter.put('/', validations.validateAuthorization, controller.updateService);\r\n\r\n//05. Testing /api/Services/testingSocket\r\nrouter.post('/testingSocket', controller.testingPublishSocket);\r\n\r\n\r\nrouter.use(function (err, req, res, next) {\r\n    let arrayMessages = [];\r\n    let allErrorField;\r\n    for (let i = 0; i < err.errors.length; i++) {\r\n        let Single_error = err.errors[i].messages.toString().replace(/\"/g, '');\r\n        arrayMessages.push(Single_error);\r\n    }\r\n    allErrorField = arrayMessages.join(\",\");\r\n    res.status(400).json(errorJsonResponse(allErrorField, allErrorField));\r\n});\r\n\r\n\r\nmodule.exports = router;\r\n"]}
{"version":3,"sources":["api/Service/Service.controller.js"],"names":["req","res","serviceList","status","json","find","_id","__v","exec","index","deleteService","addNewService","updateService","testingPublishSocket","formidable","require","fs","fs_extra","isImage","next","params","serviceId","remove","service_id","err","DeleteGallery","listProductItems","productList","forEach","product","push","id","deleteVideo","product_id","$in","deleteTeamMemberProduct","DeleteProduct","DeleteService","result","n","error","form","IncomingForm","parse","fields","files","length","title","description","displayOrder","filetoupload","name","uuid","oldpath","path","newpath","dbpath","renameFilePath","toLowerCase","move","toString","rename","ServiceNewAdd","image_url","date","Date","toISOString","save","then","InsertService","data","errorMessage","Error","serviceObject","update","UpdateService","nModified","requestObj","message","body","response","console","log"],"mappings":"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","file":"Service.controller.js","sourcesContent":["import Service from './Service.model';\r\nimport {errorJsonResponse, serviceImageUploadLocation, getGuid, setCache, getCache} from '../../config/commonHelper';\r\nimport Gallery from '../Gallery/Gallery.model';\r\nimport Product from '../Product/Product.model';\r\nimport TeamMemberProduct from '../TeamMemberProduct/TeamMemberProduct.model';\r\nimport Video from '../Video/Video.model';\r\n\r\nimport {socketPublishMessage} from '../Socket/index';\r\n\r\n\r\nvar formidable = require('formidable');\r\nvar fs = require('fs');\r\nvar fs_extra = require('fs-extra');\r\nconst isImage = require('is-image');\r\n\r\n// Gets a list of Services\r\nexport async function index(req, res) {\r\n    let serviceList = getCache('serviceList');\r\n    if(serviceList !== null) {\r\n        res.status(200).json(serviceList);\r\n    } else {\r\n        serviceList = await Service.find({}, {_id: 0, __v: 0}).exec();\r\n        setCache('serviceList', serviceList);\r\n        res.status(200).json(serviceList);\r\n    }\r\n}\r\n\r\nexport function deleteService(req, res, next) {\r\n    try {\r\n        if (req.params.serviceId) {\r\n            let serviceId = req.params.serviceId;\r\n            // delete all Gallery\r\n            Gallery.remove({service_id: serviceId})\r\n                .exec(function (err, DeleteGallery) {\r\n                    if (!err) {\r\n                        if (DeleteGallery) {\r\n\r\n                            //delete all TeamMemberProduct\r\n                            Product.find({service_id: serviceId}).exec((err, listProductItems) => {\r\n\r\n                                let productList = [];\r\n                                listProductItems.forEach((product) => {\r\n                                    productList.push(product.id);\r\n                                });\r\n\r\n                                //delete video\r\n                                Video.remove({serviceId: serviceId}).exec((err, deleteVideo) => {\r\n                                    if (deleteVideo) {\r\n                                        TeamMemberProduct.remove({product_id: {$in: productList}}).exec((err, deleteTeamMemberProduct) => {\r\n                                            // delete all Product\r\n                                            if (deleteTeamMemberProduct) {\r\n                                                Product.remove({service_id: serviceId})\r\n                                                    .exec(function (err, DeleteProduct) {\r\n                                                        if (!err) {\r\n                                                            if (DeleteProduct) {\r\n                                                                // Delete Service\r\n                                                                Service.remove({id: serviceId})\r\n                                                                    .exec(function (err, DeleteService) {\r\n                                                                        if (!err) {\r\n                                                                            if (DeleteService) {\r\n                                                                                if (DeleteService.result.n === 1) {\r\n                                                                                    setCache('serviceList', null);\r\n                                                                                    res.status(200)\r\n                                                                                        .json({\r\n                                                                                            id: serviceId,\r\n                                                                                            result: \"Deleted Successfully\"\r\n                                                                                        });\r\n                                                                                } else {\r\n                                                                                    res.status(400)\r\n                                                                                        .json(errorJsonResponse(\"service not found\", \"service not found\"));\r\n                                                                                }\r\n                                                                            }\r\n                                                                        }\r\n                                                                    });\r\n                                                            }\r\n                                                        } else {\r\n                                                            res.status(400)\r\n                                                                .json(errorJsonResponse(err, \"Contact to your Developer\"));\r\n                                                        }\r\n                                                    });\r\n                                            }\r\n                                        });\r\n                                    }\r\n                                });\r\n                            });\r\n                        } else {\r\n                            res.status(400)\r\n                                .json(errorJsonResponse(\"Invalid Service\", \"Invalid Service\"));\r\n                        }\r\n                    } else {\r\n                        res.status(400)\r\n                            .json(errorJsonResponse(err, \"Contact to your Developer\"));\r\n                    }\r\n                });\r\n        } else {\r\n            res.status(400)\r\n                .json(errorJsonResponse(\"Id is required\", \"Id is required\"));\r\n        }\r\n\r\n    } catch (error) {\r\n        res.status(400).json(errorJsonResponse(error, \"Contact to your Developer\"));\r\n    }\r\n}\r\n\r\nexport function addNewService(req, res, next) {\r\n    try {\r\n        let form = new formidable.IncomingForm();\r\n        form.parse(req, function (err, fields, files) {\r\n\r\n            if (Object.keys(files).length > 0 && fields.title && fields.description && fields.displayOrder && isImage(files.filetoupload.name)) {\r\n                let uuid = getGuid();\r\n                let oldpath = files.filetoupload.path;\r\n                let newpath = serviceImageUploadLocation.path + files.filetoupload.name;\r\n                let dbpath = serviceImageUploadLocation.dbpath + uuid + files.filetoupload.name;\r\n                let renameFilePath = serviceImageUploadLocation.path + uuid + files.filetoupload.name;\r\n                let title = fields.title.toLowerCase();\r\n                let description = fields.description.toLowerCase();\r\n                let displayOrder = fields.displayOrder;\r\n\r\n                fs_extra.move(oldpath, newpath, function (err) {\r\n                    if (err) {\r\n                        res.status(400)\r\n                            .json(errorJsonResponse(err.toString(), \"Same Name Image Already Available On Server\"));\r\n                    } else {\r\n                        fs.rename(newpath, renameFilePath, function (err) {\r\n                            if (err) {\r\n                                res.status(400).json(errorJsonResponse(err.toString(), \"Fail to Rename file\"));\r\n                            } else {\r\n                                let ServiceNewAdd = new Service({\r\n                                    id: getGuid(),\r\n                                    image_url: dbpath,\r\n                                    title: title,\r\n                                    description: description,\r\n                                    displayOrder: displayOrder,\r\n                                    date: new Date().toISOString()\r\n                                });\r\n                                ServiceNewAdd.save()\r\n                                    .then(function (InsertService, err) {\r\n                                        if (!err) {\r\n                                            if (InsertService) {\r\n                                                setCache('serviceList', null);\r\n                                                res.status(200)\r\n                                                    .json({data: InsertService, result: \"Save Successfully\"});\r\n                                            } else {\r\n                                                res.status(400)\r\n                                                    .json(errorJsonResponse(\"Error in db response\", \"Invalid_Image\"));\r\n                                            }\r\n                                        } else {\r\n                                            res.status(400)\r\n                                                .json(errorJsonResponse(err, \"Contact to your Developer\"));\r\n                                        }\r\n                                    });\r\n                            }\r\n                        });\r\n                    }\r\n                })\r\n            } else {\r\n                let errorMessage = \"\";\r\n                if (Object.keys(files).length <= 0) {\r\n                    errorMessage += \"Service image is required.\";\r\n                } else if (!fields.title) {\r\n                    errorMessage += \"Service title is required.\";\r\n                } else if (!fields.description) {\r\n                    errorMessage += \"Service description is required.\";\r\n                } else if (!fields.displayOrder) {\r\n                    errorMessage += \"Service displayOrder is required.\";\r\n                }\r\n                else {\r\n                    if (!isImage(files.filetoupload.name)) {\r\n                        errorMessage += \"only image is allowed.\";\r\n                    }\r\n                }\r\n\r\n                res.status(400).json(errorJsonResponse(errorMessage, errorMessage));\r\n            }\r\n        });\r\n    }\r\n    catch (Error) {\r\n        res.status(400).json(errorJsonResponse(Error.toString(), \"Invalid Image\"));\r\n    }\r\n}\r\n\r\nexport function updateService(req, res, next) {\r\n    try {\r\n        let form = new formidable.IncomingForm();\r\n        form.parse(req, function (err, fields, files) {\r\n\r\n            if (fields.title && fields.description && fields.id && fields.displayOrder) {\r\n\r\n                if (files.filetoupload && isImage(files.filetoupload.name)) {\r\n                    let uuid = getGuid();\r\n                    let oldpath = files.filetoupload.path;\r\n                    let newpath = serviceImageUploadLocation.path + files.filetoupload.name;\r\n                    let dbpath = serviceImageUploadLocation.dbpath + uuid + files.filetoupload.name;\r\n                    let renameFilePath = serviceImageUploadLocation.path + uuid + files.filetoupload.name;\r\n                    let title = fields.title.toLowerCase();\r\n                    let description = fields.description.toLowerCase();\r\n                    let displayOrder = fields.displayOrder;\r\n                    let id = fields.id;\r\n\r\n                    let serviceObject = {\r\n                        id,\r\n                        image_url: dbpath,\r\n                        title,\r\n                        description,\r\n                        displayOrder\r\n                    };\r\n\r\n\r\n                    fs_extra.move(oldpath, newpath, function (err) {\r\n                        if (err) {\r\n                            res.status(400)\r\n                                .json(errorJsonResponse(err.toString(), \"Same Name Image Already Available On Server\"));\r\n                        } else {\r\n                            fs.rename(newpath, renameFilePath, function (err) {\r\n                                if (err) {\r\n                                    res.status(400).json(errorJsonResponse(err.toString(), \"Fail to Rename file\"));\r\n                                } else {\r\n                                    Service.update({id: id}, {\r\n                                        image_url: dbpath,\r\n                                        title: title,\r\n                                        description: description,\r\n                                        displayOrder: displayOrder\r\n                                    }).exec(function (err, UpdateService) {\r\n                                        if (!err) {\r\n                                            if (UpdateService) {\r\n                                                if (UpdateService.nModified === 1 || UpdateService.n === 1) {\r\n                                                    setCache('serviceList', null);\r\n                                                    res.status(200)\r\n                                                        .json({\r\n                                                            data: serviceObject,\r\n                                                            result: \"updated Successfully \"\r\n                                                        });\r\n                                                } else {\r\n                                                    res.status(400)\r\n                                                        .json(errorJsonResponse(\"not found\", \"not found\"));\r\n                                                }\r\n\r\n                                            } else {\r\n                                                res.status(400)\r\n                                                    .json(errorJsonResponse(\"Invalid_Image\", \"Invalid_Image\"));\r\n                                            }\r\n                                        } else {\r\n                                            res.status(400)\r\n                                                .json(errorJsonResponse(err, \"Contact to your Developer\"));\r\n                                        }\r\n                                    });\r\n                                }\r\n                            });\r\n                        }\r\n                    })\r\n                } else {\r\n\r\n                    let title = fields.title.toLowerCase();\r\n                    let description = fields.description.toLowerCase();\r\n                    let id = fields.id;\r\n                    let displayOrder = fields.displayOrder;\r\n\r\n                    let serviceObject = {\r\n                        id,\r\n                        title,\r\n                        description,\r\n                        displayOrder\r\n                    };\r\n\r\n                    Service.update({id: id}, {\r\n                        title: title,\r\n                        description: description,\r\n                        displayOrder: displayOrder\r\n                    }).exec(function (err, UpdateService) {\r\n                        if (!err) {\r\n                            if (UpdateService) {\r\n                                if (UpdateService.nModified === 1 || UpdateService.n === 1) {\r\n                                    setCache('serviceList', null);\r\n                                    res.status(200)\r\n                                        .json({\r\n                                            data: serviceObject,\r\n                                            result: \"updated Successfully \"\r\n                                        });\r\n                                } else {\r\n                                    res.status(403)\r\n                                        .json(errorJsonResponse(\"not found\", \"not found\"));\r\n                                }\r\n\r\n                            } else {\r\n                                res.status(404)\r\n                                    .json(errorJsonResponse(\"Invalid_Image\", \"Invalid_Image\"));\r\n                            }\r\n                        } else {\r\n                            res.status(400)\r\n                                .json(errorJsonResponse(err, \"Contact to your Developer\"));\r\n                        }\r\n                    });\r\n\r\n                }\r\n\r\n            } else {\r\n                res.status(400).json(errorJsonResponse(\"Invalid Request\", \"Invalid Request\"));\r\n            }\r\n        });\r\n    }\r\n    catch (Error) {\r\n        res.status(400).json(errorJsonResponse(Error.toString(), \"Invalid Image\"));\r\n    }\r\n}\r\n\r\nexport function testingPublishSocket(req, res, next) {\r\n    try {\r\n\r\n        let requestObj = {\r\n            message: req.body.message,\r\n            data: req.body.data,\r\n        };\r\n\r\n        socketPublishMessage(requestObj.message, {data: requestObj.data}).then((response) => {\r\n            res.status(200).json({result: response});\r\n        });\r\n    } catch (error) {\r\n        console.log(error);\r\n        console.log(error.message.toString());\r\n        res.status(403).json({result: error.message.toString()});\r\n    }\r\n}\r\n"]}
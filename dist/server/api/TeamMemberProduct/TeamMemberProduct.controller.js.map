{"version":3,"sources":["api/TeamMemberProduct/TeamMemberProduct.controller.js"],"names":["addTeamProduct","removeTeamProduct","teamMemberProductsList","req","res","next","body","id","product_id","approxTime","TeamObject","findOne","exec","err","findProduct","role","$in","findTeamMember","TeamMemberProductAdd","teamMember_id","save","then","InsertTeamMemberProductAdd","status","json","data","result","error","Error","toString","find","findService","length","remove","DeleteTeamMember","n","params","teamMemberId","listTeamMemberProduct","productList","productListWithTime","map","teamMemberProduct","push","product","response","singleProduct","getApproxTime","singleProductObj","_id","service_id","price","offerPrice","image_url","title","description","bookingValue","date","sex","__v"],"mappings":";;;;;QAKgBA,c,GAAAA,c;QA8EAC,iB,GAAAA,iB;QAsDAC,sB,GAAAA,sB;;AAzIhB;;;;AACA;;AACA;;;;AACA;;;;;;AAEO,SAASF,cAAT,CAAwBG,GAAxB,EAA6BC,GAA7B,EAAkCC,IAAlC,EAAwC;AAC3C,QAAI;AACA,YAAGF,IAAIG,IAAP,EAAa;;AAET,gBAAIC,KAAKJ,IAAIG,IAAJ,CAASC,EAAlB;AACA,gBAAIC,aAAaL,IAAIG,IAAJ,CAASE,UAA1B;AACA,gBAAIC,aAAaN,IAAIG,IAAJ,CAASG,UAA1B;;AAEA,gBAAIC,aAAa;AACbH,kBADa;AAEbC,0BAFa;AAGbC;AAHa,aAAjB;;AAMA,gBAAI;AACA,kCAAQE,OAAR,CAAgB,EAACJ,IAAIC,UAAL,EAAhB,EACKI,IADL,CACU,UAASC,GAAT,EAAcC,WAAd,EAA2B;;AAE7B,wBAAGA,WAAH,EAAgB;;AAEZ,wCAAMH,OAAN,CAAc,EAACJ,IAAIA,EAAL,EAASQ,MAAM,EAACC,KAAK,CAAC,OAAD,EAAU,UAAV,CAAN,EAAf,EAAd,EACKJ,IADL,CACU,CAACC,GAAD,EAAMI,cAAN,KAAyB;;AAE3B,gCAAGA,cAAH,EAAmB;;AAEf,oCAAIC,uBAAuB,gCAAsB;AAC7CX,wCAAI,4BADyC;AAE7CY,mDAAeT,WAAWH,EAFmB;AAG7CC,gDAAYE,WAAWF,UAHsB;AAI7CC,gDAAYC,WAAWD;AAJsB,iCAAtB,CAA3B;;AAOAS,qDAAqBE,IAArB,GACKC,IADL,CACU,UAASC,0BAAT,EAAqCT,GAArC,EAA0C;AAC5C,wCAAG,CAACA,GAAJ,EAAS;AACL,4CAAGS,0BAAH,EAA+B;AAC3B,wEAAS,mBAAT,EAA6B,IAA7B;AACA,wEAAS,uBAAT,EAAkC,IAAlC;AACAlB,gDAAImB,MAAJ,CAAW,GAAX,EACKC,IADL,CACU;AACFC,sDAAMH,0BADJ;AAEFI,wDAAQ;AAFN,6CADV;AAKH,yCARD,MAQO;AACHtB,gDAAImB,MAAJ,CAAW,GAAX,EACKC,IADL,CACU,qCAAkB,sBAAlB,EAA0C,eAA1C,CADV;AAEH;AACJ,qCAbD,MAaO;AACHpB,4CAAImB,MAAJ,CAAW,GAAX,EACKC,IADL,CACU,qCAAkBX,GAAlB,EAAuB,2BAAvB,CADV;AAEH;AACJ,iCAnBL;AAqBH,6BA9BD,MA8BO;AACHT,oCAAImB,MAAJ,CAAW,GAAX,EACKC,IADL,CACU,qCAAkB,yBAAlB,EAA6C,yBAA7C,CADV;AAEH;AACJ,yBArCL;AAsCH,qBAxCD,MAyCK;AACDpB,4BAAImB,MAAJ,CAAW,GAAX,EACKC,IADL,CACU,qCAAkB,sBAAlB,EAA0C,sBAA1C,CADV;AAEH;AACJ,iBAhDL;AAiDH,aAlDD,CAmDA,OACKG,KADL,EACY;AACRvB,oBAAImB,MAAJ,CAAW,GAAX,EACKC,IADL,CACU,qCAAkBG,KAAlB,EAAyB,sBAAzB,CADV;AAEH;AACJ;AACJ,KAtED,CAuEA,OAAMC,KAAN,EAAa;AACTxB,YAAImB,MAAJ,CAAW,GAAX,EACKC,IADL,CACU,qCAAkBI,MAAMC,QAAN,EAAlB,EAAoC,iBAApC,CADV;AAEH;AACJ;;AAEM,SAAS5B,iBAAT,CAA2BE,GAA3B,EAAgCC,GAAhC,EAAqCC,IAArC,EAA2C;AAC9C,QAAI;AACA,YAAGF,IAAIG,IAAP,EAAa;;AAET,gBAAIC,KAAKJ,IAAIG,IAAJ,CAASC,EAAlB;AACA,gBAAIC,aAAaL,IAAIG,IAAJ,CAASE,UAA1B;AACA,gBAAIE,aAAa;AACbH,kBADa;AAEbC;AAFa,aAAjB;;AAKA,gBAAI;AACA,kCAAQsB,IAAR,CAAa,EAACvB,IAAIC,UAAL,EAAb,EACKI,IADL,CACU,UAASC,GAAT,EAAckB,WAAd,EAA2B;AAC7B,wBAAGA,YAAYC,MAAZ,GAAqB,CAAxB,EAA2B;AACvB,oDAAkBC,MAAlB,CAAyB,EAACd,eAAeT,WAAWH,EAA3B,EAA+BC,YAAYE,WAAWF,UAAtD,EAAzB,EACKI,IADL,CACU,UAASC,GAAT,EAAcqB,gBAAd,EAAgC;AAClC,gCAAG,CAACrB,GAAJ,EAAS;AACL,oCAAGqB,gBAAH,EAAqB;AACjB,wCAAGA,iBAAiBR,MAAjB,CAAwBS,CAAxB,KAA8B,CAAjC,EAAoC;AAChC,oEAAS,mBAAT,EAA6B,IAA7B;AACA,oEAAS,uBAAT,EAAkC,IAAlC;AACA/B,4CAAImB,MAAJ,CAAW,GAAX,EACKC,IADL,CACU;AACFC,kDAAMf,UADJ;AAEFgB,oDAAQ;AAFN,yCADV;AAKH,qCARD,MAQO;AACHtB,4CAAImB,MAAJ,CAAW,GAAX,EACKC,IADL,CACU,qCAAkB,mBAAlB,EAAuC,mBAAvC,CADV;AAEH;AACJ;AACJ;AACJ,yBAlBL;AAmBH,qBApBD,MAqBK;AACDpB,4BAAImB,MAAJ,CAAW,GAAX,EACKC,IADL,CACU,qCAAkB,sBAAlB,EAA0C,sBAA1C,CADV;AAEH;AACJ,iBA3BL;AA4BH,aA7BD,CA8BA,OACKG,KADL,EACY;AACRvB,oBAAImB,MAAJ,CAAW,GAAX,EACKC,IADL,CACU,qCAAkBG,KAAlB,EAAyB,sBAAzB,CADV;AAEH;AACJ;AACJ,KA9CD,CA+CA,OAAMC,KAAN,EAAa;AACTxB,YAAImB,MAAJ,CAAW,GAAX,EACKC,IADL,CACU,qCAAkBI,MAAMC,QAAN,EAAlB,EAAoC,iBAApC,CADV;AAEH;AACJ;;AAEM,SAAS3B,sBAAT,CAAgCC,GAAhC,EAAqCC,GAArC,EAA0CC,IAA1C,EAAgD;AACnD,QAAI;AACA,YAAGF,IAAIiC,MAAJ,CAAWC,YAAd,EAA4B;;AAExB,gBAAIA,eAAelC,IAAIiC,MAAJ,CAAWC,YAA9B;AACA,wCAAkBP,IAAlB,CAAuB,EAACX,eAAekB,YAAhB,EAAvB,EACKzB,IADL,CACU,CAACC,GAAD,EAAMyB,qBAAN,KAAgC;AAClC,oBAAG,CAACzB,GAAJ,EAAS;;AAEL,wBAAI0B,cAAc,EAAlB;AACA,wBAAIC,sBAAsB,EAA1B;;AAEAF,0CAAsBG,GAAtB,CAA2BC,iBAAD,IAAuB;AAC7CH,oCAAYI,IAAZ,CAAiBD,kBAAkBlC,UAAnC;AACAgC,4CAAoBG,IAApB,CAAyB,EAACpC,IAAImC,kBAAkBlC,UAAvB,EAAmCC,YAAYiC,kBAAkBjC,UAAjE,EAAzB;AACH,qBAHD;;AAKA,2BAAO,kBAAQqB,IAAR,CAAa;AAChBvB,4BAAI;AACAS,iCAAKuB;AADL;AADY,qBAAb,EAKF3B,IALE,CAKG,UAASC,GAAT,EAAc+B,OAAd,EAAuB;;AAEzB,4BAAIC,WAAW,EAAf;AACAD,gCAAQH,GAAR,CAAaK,aAAD,IAAmB;AAC3B,kCAAMC,gBAAgBP,oBAAoBV,IAApB,CAA0BL,IAAD,IAAUA,KAAKlB,EAAL,KAAYuC,cAAcvC,EAA7D,CAAtB;AACA,kCAAMyC,mBAAmB;AACrBC,qCAAKH,cAAcG,GADE;AAErB1C,oCAAIuC,cAAcvC,EAFG;AAGrB2C,4CAAYJ,cAAcI,UAHL;AAIrBC,uCAAOL,cAAcK,KAJA;AAKrBC,4CAAYN,cAAcM,UALL;AAMrBC,2CAAWP,cAAcO,SANJ;AAOrBC,uCAAOR,cAAcQ,KAPA;AAQrBC,6CAAaT,cAAcS,WARN;AASrBC,8CAAcV,cAAcU,YATP;AAUrBC,sCAAMX,cAAcW,IAVC;AAWrBC,qCAAKZ,cAAcY,GAXE;AAYrBjD,4CAAYsC,cAActC,UAZL;AAarBkD,qCAAK;AAbgB,6BAAzB;;AAgBAd,qCAASF,IAAT,CAAcK,gBAAd;AACH,yBAnBD;;AAqBA5C,4BAAImB,MAAJ,CAAW,GAAX,EACKC,IADL,CACUqB,QADV;AAGH,qBAhCE,CAAP;AAkCH,iBA5CD,MA4CO;AACHzC,wBAAImB,MAAJ,CAAW,GAAX,EACKC,IADL,CACU,qCAAkBX,GAAlB,EAAuB,2BAAvB,CADV;AAEH;AACJ,aAlDL;AAmDH,SAtDD,MAsDO;AACHT,gBAAImB,MAAJ,CAAW,GAAX,EACKC,IADL,CACU,qCAAkB,4BAAlB,EAAgD,4BAAhD,CADV;AAEH;AACJ,KA3DD,CA2DE,OAAMG,KAAN,EAAa;AACXvB,YAAImB,MAAJ,CAAW,GAAX,EACKC,IADL,CACU,qCAAkBG,KAAlB,EAAyB,2BAAzB,CADV;AAEH;AACJ","file":"TeamMemberProduct.controller.js","sourcesContent":["import TeamMemberProduct from './TeamMemberProduct.model';\nimport {errorJsonResponse, getGuid, setCache} from '../../config/commonHelper';\nimport Product from '../Product/Product.model';\nimport Oauth from '../oauth/oauth.model';\n\nexport function addTeamProduct(req, res, next) {\n    try {\n        if(req.body) {\n\n            let id = req.body.id;\n            let product_id = req.body.product_id;\n            let approxTime = req.body.approxTime;\n\n            let TeamObject = {\n                id,\n                product_id,\n                approxTime\n            };\n\n            try {\n                Product.findOne({id: product_id})\n                    .exec(function(err, findProduct) {\n\n                        if(findProduct) {\n\n                            Oauth.findOne({id: id, role: {$in: ['admin', 'employee']}})\n                                .exec((err, findTeamMember) => {\n\n                                    if(findTeamMember) {\n\n                                        let TeamMemberProductAdd = new TeamMemberProduct({\n                                            id: getGuid(),\n                                            teamMember_id: TeamObject.id,\n                                            product_id: TeamObject.product_id,\n                                            approxTime: TeamObject.approxTime,\n                                        });\n\n                                        TeamMemberProductAdd.save()\n                                            .then(function(InsertTeamMemberProductAdd, err) {\n                                                if(!err) {\n                                                    if(InsertTeamMemberProductAdd) {\n                                                        setCache('productsHomeLists',null);\n                                                        setCache('teamMemberProductList', null);\n                                                        res.status(200)\n                                                            .json({\n                                                                data: InsertTeamMemberProductAdd,\n                                                                result: 'Successfully Add new product'\n                                                            });\n                                                    } else {\n                                                        res.status(400)\n                                                            .json(errorJsonResponse('Error in db response', 'Invalid_Image'));\n                                                    }\n                                                } else {\n                                                    res.status(400)\n                                                        .json(errorJsonResponse(err, 'Contact to your Developer'));\n                                                }\n                                            });\n\n                                    } else {\n                                        res.status(400)\n                                            .json(errorJsonResponse('TeamMember is not found', 'TeamMember is not found'));\n                                    }\n                                });\n                        }\n                        else {\n                            res.status(400)\n                                .json(errorJsonResponse('Product is not found', 'Product is not found'));\n                        }\n                    });\n            }\n            catch\n                (error) {\n                res.status(400)\n                    .json(errorJsonResponse(error, 'contact to developer'));\n            }\n        }\n    }\n    catch(Error) {\n        res.status(400)\n            .json(errorJsonResponse(Error.toString(), 'Invalid Request'));\n    }\n}\n\nexport function removeTeamProduct(req, res, next) {\n    try {\n        if(req.body) {\n\n            let id = req.body.id;\n            let product_id = req.body.product_id;\n            let TeamObject = {\n                id,\n                product_id\n            };\n\n            try {\n                Product.find({id: product_id})\n                    .exec(function(err, findService) {\n                        if(findService.length > 0) {\n                            TeamMemberProduct.remove({teamMember_id: TeamObject.id, product_id: TeamObject.product_id})\n                                .exec(function(err, DeleteTeamMember) {\n                                    if(!err) {\n                                        if(DeleteTeamMember) {\n                                            if(DeleteTeamMember.result.n === 1) {\n                                                setCache('productsHomeLists',null);\n                                                setCache('teamMemberProductList', null);\n                                                res.status(200)\n                                                    .json({\n                                                        data: TeamObject,\n                                                        result: 'Successfully Remove Product'\n                                                    });\n                                            } else {\n                                                res.status(400)\n                                                    .json(errorJsonResponse('service not found', 'service not found'));\n                                            }\n                                        }\n                                    }\n                                });\n                        }\n                        else {\n                            res.status(403)\n                                .json(errorJsonResponse('Product is not found', 'Product is not found'));\n                        }\n                    });\n            }\n            catch\n                (error) {\n                res.status(501)\n                    .json(errorJsonResponse(error, 'contact to developer'));\n            }\n        }\n    }\n    catch(Error) {\n        res.status(400)\n            .json(errorJsonResponse(Error.toString(), 'Invalid Request'));\n    }\n}\n\nexport function teamMemberProductsList(req, res, next) {\n    try {\n        if(req.params.teamMemberId) {\n\n            let teamMemberId = req.params.teamMemberId;\n            TeamMemberProduct.find({teamMember_id: teamMemberId})\n                .exec((err, listTeamMemberProduct) => {\n                    if(!err) {\n\n                        let productList = [];\n                        let productListWithTime = [];\n\n                        listTeamMemberProduct.map((teamMemberProduct) => {\n                            productList.push(teamMemberProduct.product_id);\n                            productListWithTime.push({id: teamMemberProduct.product_id, approxTime: teamMemberProduct.approxTime});\n                        });\n\n                        return Product.find({\n                            id: {\n                                $in: productList\n                            }\n                        })\n                            .exec(function(err, product) {\n\n                                let response = [];\n                                product.map((singleProduct) => {\n                                    const getApproxTime = productListWithTime.find((data) => data.id === singleProduct.id);\n                                    const singleProductObj = {\n                                        _id: singleProduct._id,\n                                        id: singleProduct.id,\n                                        service_id: singleProduct.service_id,\n                                        price: singleProduct.price,\n                                        offerPrice: singleProduct.offerPrice,\n                                        image_url: singleProduct.image_url,\n                                        title: singleProduct.title,\n                                        description: singleProduct.description,\n                                        bookingValue: singleProduct.bookingValue,\n                                        date: singleProduct.date,\n                                        sex: singleProduct.sex,\n                                        approxTime: getApproxTime.approxTime,\n                                        __v: 0,\n                                    };\n\n                                    response.push(singleProductObj);\n                                });\n\n                                res.status(200)\n                                    .json(response);\n\n                            });\n\n                    } else {\n                        res.status(400)\n                            .json(errorJsonResponse(err, 'Contact to your Developer'));\n                    }\n                });\n        } else {\n            res.status(400)\n                .json(errorJsonResponse('Team Member Id is required', 'Team Member Id is required'));\n        }\n    } catch(error) {\n        res.status(400)\n            .json(errorJsonResponse(error, 'Contact to your Developer'));\n    }\n}\n"]}
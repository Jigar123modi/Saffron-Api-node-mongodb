{"version":3,"sources":["api/Team/Team.controller.js"],"names":["req","res","teamList","status","json","find","role","$in","_id","__v","password","exec","index","deleteTeam","addNewTeam","updateTeam","formidable","require","fs","fs_extra","isImage","next","params","teamId","remove","teamMember_id","err","deleteTeamMember","id","DeleteTeam","result","n","error","message","toString","form","IncomingForm","parse","fields","files","length","first_name","description","mobile_number","last_name","filetoupload","name","uuid","oldpath","path","newpath","dbpath","renameFilePath","toLowerCase","move","rename","alreadyAvailable","findOne","userId","findUser","registrationUser","contact_no","email_id","block","image_url","save","then","RegistrationSuccess","data","errorMessage","TeamObject","update","UpdateTeam","nModified","Error"],"mappings":"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","file":"Team.controller.js","sourcesContent":["import TeamMemberProduct from '../TeamMemberProduct/TeamMemberProduct.model';\r\nimport Oauth from '../oauth/oauth.model';\r\nimport {errorJsonResponse, getCache, getGuid, setCache, UserAvatarImageUploadLocation} from '../../config/commonHelper';\r\nvar formidable = require('formidable');\r\nvar fs = require('fs');\r\nvar fs_extra = require('fs-extra');\r\nconst isImage = require('is-image');\r\n\r\n// Gets a list of Teams\r\nexport async function index(req, res) {\r\n    let teamList = getCache('teamList');\r\n    if(teamList !== null) {\r\n        res.status(200).json(teamList);\r\n    } else {\r\n        teamList = await Oauth.find({role: {$in: ['employee']}}, {_id: 0, __v: 0, password: 0}).exec();\r\n        setCache('teamList', teamList);\r\n        res.status(200).json(teamList);\r\n    }\r\n}\r\n\r\nexport function deleteTeam(req, res, next) {\r\n    try {\r\n        if (req.params.teamId) {\r\n            let teamId = req.params.teamId;\r\n\r\n            //Remove all the TeamMemberProduct\r\n            TeamMemberProduct.remove({teamMember_id: teamId}).exec((err, deleteTeamMember) => {\r\n                if (deleteTeamMember) {\r\n                    Oauth.remove({id: teamId})\r\n                        .exec(function (err, DeleteTeam) {\r\n                            if (!err) {\r\n                                if (DeleteTeam) {\r\n                                    if (DeleteTeam.result.n === 1) {\r\n                                        setCache('teamList', null);\r\n                                        res.status(200)\r\n                                            .json({id: teamId, result: 'Deleted Successfully'});\r\n                                    } else {\r\n                                        res.status(400)\r\n                                            .json({result: 'Deleted Fail'});\r\n                                    }\r\n                                } else {\r\n                                    res.status(400)\r\n                                        .json(errorJsonResponse('Invalid Post', 'Invalid Post'));\r\n                                }\r\n                            } else {\r\n                                res.status(400)\r\n                                    .json(errorJsonResponse(err, 'Contact to your Developer'));\r\n                            }\r\n                        });\r\n                }\r\n            });\r\n        } else {\r\n            res.status(400)\r\n                .json(errorJsonResponse('Id is required', 'Id is required'));\r\n        }\r\n\r\n    } catch (error) {\r\n        res.status(400)\r\n            .json(errorJsonResponse(error.message.toString(), 'Contact to your Developer'));\r\n    }\r\n}\r\n\r\nexport function addNewTeam(req, res, next) {\r\n    try {\r\n\r\n        let form = new formidable.IncomingForm();\r\n        form.parse(req, function (err, fields, files) {\r\n\r\n            if (Object.keys(files).length > 0 && fields.first_name && fields.description && fields.mobile_number && fields.last_name && isImage(files.filetoupload.name)) {\r\n\r\n                let uuid = getGuid();\r\n                let oldpath = files.filetoupload.path;\r\n                let newpath = UserAvatarImageUploadLocation.path + files.filetoupload.name;\r\n                let dbpath = UserAvatarImageUploadLocation.dbpath + uuid + files.filetoupload.name;\r\n                let renameFilePath = UserAvatarImageUploadLocation.path + uuid + files.filetoupload.name;\r\n                let first_name = fields.first_name.toLowerCase();\r\n                let last_name = fields.last_name.toLowerCase();\r\n                let mobile_number = fields.mobile_number.toLowerCase();\r\n                let description = fields.description.toLowerCase();\r\n                let password = \"saffron123\";\r\n\r\n                fs_extra.move(oldpath, newpath, function (err) {\r\n                    if (err) {\r\n                        res.status(500)\r\n                            .json(errorJsonResponse(err.toString(), \"Same Name Image Already Available On Server\"));\r\n                    } else {\r\n                        fs.rename(newpath, renameFilePath, function (err) {\r\n                            if (err) {\r\n                                res.status(500).json(errorJsonResponse(err.toString(), \"Fail to Rename file\"));\r\n                            } else {\r\n\r\n                                let alreadyAvailable = false;\r\n                                //check mobile number is already register or not\r\n                                Oauth.findOne({userId: mobile_number}).exec(function (err, findUser) {\r\n\r\n                                    if (findUser) {\r\n                                        alreadyAvailable = true;\r\n                                    }\r\n\r\n                                    if (!alreadyAvailable) {\r\n                                        let registrationUser = new Oauth({\r\n                                            id: getGuid(),\r\n                                            first_name: first_name,\r\n                                            last_name: last_name,\r\n                                            description: description,\r\n                                            contact_no: mobile_number,\r\n                                            email_id: \"\",\r\n                                            userId: mobile_number,\r\n                                            password: password,\r\n                                            role: \"employee\",\r\n                                            block: false,\r\n                                            image_url: dbpath\r\n                                        });\r\n                                        registrationUser.save()\r\n                                            .then(function (RegistrationSuccess, err) {\r\n                                                if (!err) {\r\n                                                    if (RegistrationSuccess) {\r\n                                                        setCache('teamList', null);\r\n                                                        res.status(200)\r\n                                                            .json({\r\n                                                                data: RegistrationSuccess,\r\n                                                                result: \"Registration Successfully for Team Member\"\r\n                                                            });\r\n                                                    } else {\r\n                                                        res.status(400)\r\n                                                            .json(errorJsonResponse(\"Error in db response\", \"Invalid_Image\"));\r\n                                                    }\r\n                                                } else {\r\n                                                    res.status(400)\r\n                                                        .json(errorJsonResponse(err, \"Contact to your Developer\"));\r\n                                                }\r\n                                            });\r\n\r\n                                    } else {\r\n                                        res.status(400).json(errorJsonResponse(\"Mobile number is already register\", \"Mobile number is already register\"));\r\n                                    }\r\n                                });\r\n\r\n                            }\r\n                        });\r\n                    }\r\n                })\r\n            } else {\r\n\r\n                let errorMessage = \"\";\r\n                if (Object.keys(files).length <= 0) {\r\n                    errorMessage += \"Team image is required.\";\r\n                } else if (!fields.first_name) {\r\n                    errorMessage += \"Team first name is required\";\r\n                } else if (!fields.last_name) {\r\n                    errorMessage += \"Team last name is required\";\r\n                } else if (!fields.mobile_number) {\r\n                    errorMessage += \"Team mobile number is required\";\r\n                } else if (!fields.password) {\r\n                    errorMessage += \"Team password is required\";\r\n                } else if (!fields.description) {\r\n                    errorMessage += \"Team description is required\";\r\n                } else {\r\n                    if (!isImage(files.filetoupload.name)) {\r\n                        errorMessage += \"only image is allowed.\";\r\n                    }\r\n                }\r\n                res.status(400).json(errorJsonResponse(errorMessage, errorMessage));\r\n\r\n            }\r\n        });\r\n    }\r\n    catch (error) {\r\n        res.status(400).json(errorJsonResponse(error.message.toString(), \"Invalid Image\"));\r\n    }\r\n}\r\n\r\nexport function updateTeam(req, res, next) {\r\n    try {\r\n        let form = new formidable.IncomingForm();\r\n        form.parse(req, function (err, fields, files) {\r\n\r\n            if (fields.first_name && fields.last_name && fields.description && fields.id) {\r\n\r\n                if (files.filetoupload && isImage(files.filetoupload.name)) {\r\n\r\n                    let uuid = getGuid();\r\n                    let id = fields.id;\r\n                    let oldpath = files.filetoupload.path;\r\n                    let newpath = UserAvatarImageUploadLocation.path + files.filetoupload.name;\r\n                    let dbpath = UserAvatarImageUploadLocation.dbpath + uuid + files.filetoupload.name;\r\n                    let renameFilePath = UserAvatarImageUploadLocation.path + uuid + files.filetoupload.name;\r\n                    let first_name = fields.first_name.toLowerCase();\r\n                    let last_name = fields.last_name.toLowerCase();\r\n                    let description = fields.description.toLowerCase();\r\n\r\n                    let TeamObject = {\r\n                        id,\r\n                        image_url: dbpath,\r\n                        first_name,\r\n                        last_name,\r\n                        description\r\n                    };\r\n\r\n                    fs_extra.move(oldpath, newpath, function (err) {\r\n                        if (err) {\r\n                            res.status(400)\r\n                                .json(errorJsonResponse(err.toString(), \"Same Name Image Already Available On Server\"));\r\n                        }\r\n                        else {\r\n                            fs.rename(newpath, renameFilePath, function (err) {\r\n                                if (err) {\r\n                                    res.status(400).json(errorJsonResponse(err.toString(), \"Fail to Rename file\"));\r\n                                } else {\r\n\r\n                                    Oauth.update({id: id}, {\r\n                                        image_url: dbpath,\r\n                                        first_name: first_name,\r\n                                        last_name: last_name,\r\n                                        description: description\r\n                                    }).exec(function (err, UpdateTeam) {\r\n                                        if (!err) {\r\n                                            if (UpdateTeam) {\r\n                                                if (UpdateTeam.nModified === 1 || UpdateTeam.n === 1) {\r\n                                                    setCache('teamList', null);\r\n                                                    res.status(200)\r\n                                                        .json({\r\n                                                            data: TeamObject,\r\n                                                            result: \"updated Successfully \"\r\n                                                        });\r\n                                                } else {\r\n                                                    res.status(400)\r\n                                                        .json(errorJsonResponse(\"not found\", \"not found\"));\r\n                                                }\r\n\r\n                                            } else {\r\n                                                res.status(400)\r\n                                                    .json(errorJsonResponse(\"Invalid_Image\", \"Invalid_Image\"));\r\n                                            }\r\n                                        } else {\r\n                                            res.status(400)\r\n                                                .json(errorJsonResponse(err, \"Contact to your Developer\"));\r\n                                        }\r\n                                    });\r\n\r\n                                }\r\n                            });\r\n                        }\r\n                    })\r\n                } else {\r\n\r\n                    let description = fields.description.toLowerCase();\r\n                    let first_name = fields.first_name.toLowerCase();\r\n                    let last_name = fields.last_name.toLowerCase();\r\n                    let id = fields.id;\r\n\r\n                    let TeamObject = {\r\n                        id,\r\n                        first_name,\r\n                        last_name,\r\n                        description\r\n                    };\r\n\r\n                    Oauth.update({id: id}, {\r\n                        first_name: first_name,\r\n                        last_name: last_name,\r\n                        description: description\r\n                    }).exec(function (err, UpdateTeam) {\r\n                        if (!err) {\r\n                            if (UpdateTeam) {\r\n                                if (UpdateTeam.nModified === 1 || UpdateTeam.n === 1) {\r\n                                    setCache('teamList', null);\r\n                                    res.status(200)\r\n                                        .json({\r\n                                            data: TeamObject,\r\n                                            result: \"updated Successfully \"\r\n                                        });\r\n                                } else {\r\n                                    res.status(400)\r\n                                        .json(errorJsonResponse(\"not found\", \"not found\"));\r\n                                }\r\n\r\n                            } else {\r\n                                res.status(400)\r\n                                    .json(errorJsonResponse(\"Invalid_Image\", \"Invalid_Image\"));\r\n                            }\r\n                        } else {\r\n                            res.status(400)\r\n                                .json(errorJsonResponse(err, \"Contact to your Developer\"));\r\n                        }\r\n                    });\r\n                }\r\n            } else {\r\n                res.status(400).json(errorJsonResponse(\"Invalid Request\", \"Invalid Request\"));\r\n            }\r\n        });\r\n    }\r\n    catch (Error) {\r\n        res.status(400).json(errorJsonResponse(Error.toString(), \"Invalid Image\"));\r\n    }\r\n}\r\n"]}
{"version":3,"sources":["api/Team/index.js"],"names":["express","require","controller","router","Router","get","index","delete","validateAuthorization","deleteTeamId","deleteTeam","post","addNewTeam","put","updateTeam","use","err","req","res","next","arrayMessages","allErrorField","i","errors","length","Single_error","messages","toString","replace","push","join","status","json","module","exports"],"mappings":";;AAEA;;;;AACA;;;;AACA;;;;AAJA,IAAIA,UAAUC,QAAQ,SAAR,CAAd;AACA,IAAIC,aAAaD,QAAQ,mBAAR,CAAjB;;;AAKA,IAAIE,SAASH,QAAQI,MAAR,EAAb;;AAEA;AACAD,OAAOE,GAAP,CAAW,GAAX,EAAgBH,WAAWI,KAA3B;;AAEA;AACAH,OAAOI,MAAP,CAAc,UAAd,EAA0B,qBAAYC,qBAAtC,EAA6D,iCAAS,qBAAYC,YAArB,CAA7D,EAAiGP,WAAWQ,UAA5G;;AAEA;AACAP,OAAOQ,IAAP,CAAY,GAAZ,EAAiB,qBAAYH,qBAA7B,EAAoDN,WAAWU,UAA/D;;AAEA;AACAT,OAAOU,GAAP,CAAW,GAAX,EAAgB,qBAAYL,qBAA5B,EAAmDN,WAAWY,UAA9D;;AAEAX,OAAOY,GAAP,CAAW,UAAUC,GAAV,EAAeC,GAAf,EAAoBC,GAApB,EAAyBC,IAAzB,EAA+B;AACtC,QAAIC,gBAAgB,EAApB;AACA,QAAIC,aAAJ;AACA,SAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIN,IAAIO,MAAJ,CAAWC,MAA/B,EAAuCF,GAAvC,EAA4C;AACxC,YAAIG,eAAeT,IAAIO,MAAJ,CAAWD,CAAX,EAAcI,QAAd,CAAuBC,QAAvB,GAAkCC,OAAlC,CAA0C,IAA1C,EAAgD,EAAhD,CAAnB;AACAR,sBAAcS,IAAd,CAAmBJ,YAAnB;AACH;AACDJ,oBAAgBD,cAAcU,IAAd,CAAmB,GAAnB,CAAhB;AACAZ,QAAIa,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,qCAAkBX,aAAlB,EAAiCA,aAAjC,CAArB;AACH,CATD;;AAWAY,OAAOC,OAAP,GAAiB/B,MAAjB","file":"index.js","sourcesContent":["var express = require('express');\r\nvar controller = require('./Team.controller');\r\nimport validations from './validation';\r\nimport validate from 'express-validation';\r\nimport {errorJsonResponse} from '../../config/commonHelper';\r\n\r\nvar router = express.Router();\r\n\r\n// 01. GET   /api/Teams/\r\nrouter.get('/', controller.index);\r\n\r\n// 02. DELETE   /api/Teams/:ID\r\nrouter.delete('/:teamId', validations.validateAuthorization, validate(validations.deleteTeamId), controller.deleteTeam);\r\n\r\n// 03. ADD NEW   /api/Teams/\r\nrouter.post('/', validations.validateAuthorization, controller.addNewTeam);\r\n\r\n// 04. UPDATE   /api/Teams/\r\nrouter.put('/', validations.validateAuthorization, controller.updateTeam);\r\n\r\nrouter.use(function (err, req, res, next) {\r\n    let arrayMessages = [];\r\n    let allErrorField;\r\n    for (let i = 0; i < err.errors.length; i++) {\r\n        let Single_error = err.errors[i].messages.toString().replace(/\"/g, '');\r\n        arrayMessages.push(Single_error);\r\n    }\r\n    allErrorField = arrayMessages.join(\",\");\r\n    res.status(400).json(errorJsonResponse(allErrorField, allErrorField));\r\n});\r\n\r\nmodule.exports = router;\r\n"]}
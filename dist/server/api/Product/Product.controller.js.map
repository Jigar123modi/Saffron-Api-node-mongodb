{"version":3,"sources":["api/Product/Product.controller.js"],"names":["req","res","ProductsList","response","AllProducts","status","json","aggregate","$sort","date","exec","error","ProductList","i","result","all","map","Service","products","Product","teamMember","TeamMember","find","product_id","id","team","push","teamMember_id","index","allProduct","addNewProduct","updateProduct","deleteProduct","formidable","require","fs","fs_extra","isImage","respondWithResult","statusCode","entity","handleError","err","send","$unwind","then","catch","next","form","IncomingForm","reg","parse","fields","files","length","title","description","service_id","sex","price","match","offerPrice","filetoupload","name","uuid","oldpath","path","newpath","dbpath","renameFilePath","toLowerCase","findOne","findService","move","toString","rename","ProductAdd","image_url","bookingValue","Date","toISOString","save","InsertService","data","Error","update","UpdateProduct","nModified","n","params","productId","remove","DeleteTeamMember","DeleteTeam","$match"],"mappings":"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","file":"Product.controller.js","sourcesContent":["import Product from './Product.model';\r\nimport Service from '../Service/Service.model';\r\nimport TeamMemberProduct from '../TeamMemberProduct/TeamMemberProduct.model';\r\nimport {errorJsonResponse, ProductImageUploadLocation, getGuid, setCache, getCache} from '../../config/commonHelper';\r\nvar formidable = require('formidable');\r\nvar fs = require('fs');\r\nvar fs_extra = require('fs-extra');\r\nconst isImage = require('is-image');\r\n\r\nfunction respondWithResult(res, statusCode) {\r\n    statusCode = statusCode || 200;\r\n    return function (entity) {\r\n        if (entity) {\r\n            return res.status(statusCode).json(entity);\r\n        }\r\n        return null;\r\n    };\r\n}\r\n\r\nfunction handleError(res, statusCode) {\r\n    statusCode = statusCode || 500;\r\n    return function (err) {\r\n        res.status(statusCode).send(err);\r\n    };\r\n}\r\n\r\n// Home Product Page\r\nexport async function index(req, res) {\r\n    let ProductsList = getCache('productsHomeLists');\r\n    if(ProductsList !== null) {\r\n        let response = {\r\n            AllProducts: ProductsList\r\n        };\r\n        res.status(200).json(response);\r\n    } else {\r\n        Service.aggregate({\"$unwind\": \"$id\"},\r\n            {\r\n                \"$lookup\": {\r\n                    \"from\": \"products\",\r\n                    \"localField\": \"id\",\r\n                    \"foreignField\": \"service_id\",\r\n                    \"as\": \"itemsObjects\"\r\n                }\r\n            },\r\n            {\r\n                \"$group\": {\r\n                    \"_id\": \"$_id\",\r\n                    \"service_id\": {\"$first\": \"$id\"},\r\n                    \"image_url\": {\"$first\": \"$image_url\"},\r\n                    \"title\": {\"$first\": \"$title\"},\r\n                    \"description\": {\"$first\": \"$description\"},\r\n                    \"date\": {\"$first\": \"$date\"},\r\n                    \"products\": {\"$first\": \"$itemsObjects\"}\r\n                }\r\n            },\r\n            {$sort: {date: 1}}).exec(async (error, ProductList) => {\r\n\r\n            let i = 0;\r\n            let result = await Promise.all(ProductList.map(async (Service) => {\r\n                i++;\r\n                return await Promise.all(Service.products.map(async (Product) => {\r\n                    i++;\r\n                    Product.teamMember = [];\r\n                    let TeamMember = await TeamMemberProduct.find({product_id: Product.id}).exec();\r\n                    return await Promise.all(TeamMember.map(async (team) => {\r\n                        i++;\r\n                        Product.teamMember.push(team.teamMember_id);\r\n                        return i;\r\n                    }));\r\n                }));\r\n            }));\r\n\r\n            let response = {\r\n                AllProducts: ProductList\r\n            };\r\n\r\n            setCache('productsHomeLists', ProductList);\r\n            res.status(200).json(response);\r\n        });\r\n    }\r\n}\r\n\r\n// Gets a list of Products\r\nexport function allProduct(req, res) {\r\n    return Product.aggregate({\"$unwind\": \"$id\"},\r\n        {\r\n            \"$lookup\": {\r\n                \"from\": \"services\",\r\n                \"localField\": \"service_id\",\r\n                \"foreignField\": \"id\",\r\n                \"as\": \"itemsObjects\"\r\n            }\r\n        }, {\r\n            $unwind: \"$itemsObjects\"\r\n        },\r\n        {\r\n            \"$group\": {\r\n                \"_id\": \"$_id\",\r\n                \"id\": {\"$first\": \"$id\"},\r\n                \"image_url\": {\"$first\": \"$image_url\"},\r\n                \"title\": {\"$first\": \"$title\"},\r\n                \"description\": {\"$first\": \"$description\"},\r\n                \"date\": {\"$first\": \"$date\"},\r\n                \"price\": {\"$first\": \"$price\"},\r\n                \"offerPrice\": {\"$first\": \"$offerPrice\"},\r\n                \"service_id\": {\"$first\": \"$service_id\"},\r\n                \"sex\": {\"$first\": \"$sex\"},\r\n                \"service_title\": {\"$first\": \"$itemsObjects.title\"}\r\n            }\r\n        },\r\n        {$sort: {date: 1}}).exec()\r\n        .then(respondWithResult(res, 200))\r\n        .catch(handleError(res));\r\n}\r\n\r\nexport function addNewProduct(req, res, next) {\r\n    try {\r\n        let form = new formidable.IncomingForm();\r\n        let reg = /^\\d+$/;\r\n        form.parse(req, function (err, fields, files) {\r\n            if (Object.keys(files).length > 0 && fields.title && fields.description && fields.service_id && fields.sex && fields.price && fields.price.match(reg) && fields.offerPrice && fields.offerPrice.match(reg) && isImage(files.filetoupload.name)) {\r\n                let uuid = getGuid();\r\n                let oldpath = files.filetoupload.path;\r\n                let newpath = ProductImageUploadLocation.path + files.filetoupload.name;\r\n                let dbpath = ProductImageUploadLocation.dbpath + uuid + files.filetoupload.name;\r\n                let renameFilePath = ProductImageUploadLocation.path + uuid + files.filetoupload.name;\r\n                let service_id = fields.service_id;\r\n                let title = fields.title.toLowerCase();\r\n                let description = fields.description.toLowerCase();\r\n                let sex = fields.sex.toLowerCase();\r\n                let price = fields.price;\r\n                let offerPrice = fields.offerPrice;\r\n\r\n                Service.findOne({id: service_id}).exec(function (err, findService) {\r\n                    // find the service.\r\n                    if (findService) {\r\n                        fs_extra.move(oldpath, newpath, function (err) {\r\n                            if (err) {\r\n                                res.status(400)\r\n                                    .json(errorJsonResponse(err.toString(), \"Same Name Image Already Available On Server\"));\r\n                            } else {\r\n                                fs.rename(newpath, renameFilePath, function (err) {\r\n                                    if (err) {\r\n                                        res.status(400).json(errorJsonResponse(err.toString(), \"Fail to Rename file\"));\r\n                                    } else {\r\n                                        let ProductAdd = new Product({\r\n                                            id: getGuid(),\r\n                                            service_id: service_id,\r\n                                            price: price,\r\n                                            offerPrice: offerPrice,\r\n                                            image_url: dbpath,\r\n                                            title: title,\r\n                                            description: description,\r\n                                            bookingValue: true,\r\n                                            date: new Date().toISOString(),\r\n                                            sex: sex\r\n                                        });\r\n                                        ProductAdd.save()\r\n                                            .then(function (InsertService, err) {\r\n                                                if (!err) {\r\n                                                    if (InsertService) {\r\n                                                        setCache('productsHomeLists',null);\r\n                                                        res.status(200)\r\n                                                            .json({\r\n                                                                data: InsertService,\r\n                                                                result: \"Save Successfully\"\r\n                                                            });\r\n                                                    } else {\r\n                                                        res.status(400)\r\n                                                            .json(errorJsonResponse(\"Error in db response\", \"Invalid_Image\"));\r\n                                                    }\r\n                                                } else {\r\n                                                    res.status(400)\r\n                                                        .json(errorJsonResponse(err, \"Contact to your Developer\"));\r\n                                                }\r\n                                            });\r\n                                    }\r\n                                });\r\n                            }\r\n                        });\r\n                    } else {\r\n                        res.status(400)\r\n                            .json(errorJsonResponse(\"Service Not Found \", \"Service Not Found\"));\r\n                    }\r\n                });\r\n            } else {\r\n                res.status(400).json(errorJsonResponse(\"Invalid Request\", \"Invalid Request\"));\r\n            }\r\n        });\r\n    }\r\n    catch (Error) {\r\n        res.status(400).json(errorJsonResponse(Error.toString(), \"Invalid Request\"));\r\n    }\r\n}\r\n\r\nexport function updateProduct(req, res, next) {\r\n    try {\r\n        var form = new formidable.IncomingForm();\r\n        form.parse(req, function (err, fields, files) {\r\n\r\n            if (fields.title && fields.description && fields.service_id && fields.sex && fields.id && fields.offerPrice && fields.price) {\r\n\r\n                let service_id = fields.service_id;\r\n                let id = fields.id;\r\n                let title = fields.title.toLowerCase();\r\n                let description = fields.description.toLowerCase();\r\n                let sex = fields.sex.toLowerCase();\r\n                let price = fields.price;\r\n                let offerPrice = fields.offerPrice;\r\n\r\n                if (files.filetoupload && isImage(files.filetoupload.name)) {\r\n                    let uuid = getGuid();\r\n                    let oldpath = files.filetoupload.path;\r\n                    let newpath = ProductImageUploadLocation.path + files.filetoupload.name;\r\n                    let dbpath = ProductImageUploadLocation.dbpath + uuid + files.filetoupload.name;\r\n                    let renameFilePath = ProductImageUploadLocation.path + uuid + files.filetoupload.name;\r\n\r\n                    let response = {\r\n                        id,\r\n                        service_id,\r\n                        image_url: dbpath,\r\n                        title,\r\n                        description,\r\n                        price,\r\n                        offerPrice,\r\n                        sex\r\n                    };\r\n\r\n                    Service.findOne({id: service_id}).exec(function (err, findService) {\r\n                        if (findService) {\r\n                            fs_extra.move(oldpath, newpath, function (err) {\r\n                                if (err) {\r\n                                    res.status(400)\r\n                                        .json(errorJsonResponse(err.toString(), \"Same Name Image Already Available On Server\"));\r\n                                } else {\r\n                                    fs.rename(newpath, renameFilePath, function (err) {\r\n                                        if (err) {\r\n                                            res.status(400).json(errorJsonResponse(err.toString(), \"Fail to Rename file\"));\r\n                                        } else {\r\n\r\n                                            Product.update({id: id}, {\r\n                                                image_url: dbpath,\r\n                                                service_id: response.service_id,\r\n                                                price: response.price,\r\n                                                offerPrice: response.offerPrice,\r\n                                                title: response.title,\r\n                                                description: response.description,\r\n                                                sex: response.sex\r\n                                            }).exec(function (err, UpdateProduct) {\r\n                                                if (!err) {\r\n                                                    if (UpdateProduct) {\r\n                                                        if (UpdateProduct.nModified === 1 || UpdateProduct.n === 1) {\r\n                                                            setCache('productsHomeLists',null);\r\n                                                            res.status(200)\r\n                                                                .json({\r\n                                                                    data: response,\r\n                                                                    result: \"updated Successfully \"\r\n                                                                });\r\n\r\n                                                        } else {\r\n                                                            res.status(400)\r\n                                                                .json(errorJsonResponse(\"Record not found\", \"Record not found\"));\r\n                                                        }\r\n\r\n                                                    } else {\r\n                                                        res.status(400)\r\n                                                            .json(errorJsonResponse(\"Invalid_Image\", \"Invalid_Image\"));\r\n                                                    }\r\n                                                } else {\r\n                                                    res.status(400)\r\n                                                        .json(errorJsonResponse(err, \"Contact to your Developer\"));\r\n                                                }\r\n                                            });\r\n                                        }\r\n                                    });\r\n                                }\r\n                            });\r\n                        } else {\r\n                            res.status(400)\r\n                                .json(errorJsonResponse(\"Service Not Found \", \"Service Not Found\"));\r\n                        }\r\n                    });\r\n\r\n                } else {\r\n\r\n                    let response = {\r\n                        id,\r\n                        service_id,\r\n                        title,\r\n                        description,\r\n                        price,\r\n                        offerPrice,\r\n                        sex\r\n                    };\r\n\r\n\r\n                    Service.findOne({id: service_id}).exec(function (err, findService) {\r\n                        if (findService) {\r\n                            Product.update({id: id}, {\r\n                                service_id: response.service_id,\r\n                                price: response.price,\r\n                                offerPrice: response.offerPrice,\r\n                                title: response.title,\r\n                                description: response.description,\r\n                                sex: response.sex\r\n                            }).exec(function (err, UpdateProduct) {\r\n                                if (!err) {\r\n                                    if (UpdateProduct) {\r\n                                        if (UpdateProduct.nModified === 1 || UpdateProduct.n === 1) {\r\n                                            setCache('productsHomeLists',null);\r\n                                            res.status(200)\r\n                                                .json({\r\n                                                    data: response,\r\n                                                    result: \"updated Successfully \"\r\n                                                });\r\n\r\n                                        } else {\r\n                                            res.status(400)\r\n                                                .json(errorJsonResponse(\"Record not found\", \"Record not found\"));\r\n                                        }\r\n                                    } else {\r\n                                        res.status(400)\r\n                                            .json(errorJsonResponse(\"Invalid_Image\", \"Invalid_Image\"));\r\n                                    }\r\n                                } else {\r\n                                    res.status(400)\r\n                                        .json(errorJsonResponse(err, \"Contact to your Developer\"));\r\n                                }\r\n                            });\r\n                        } else {\r\n                            res.status(400)\r\n                                .json(errorJsonResponse(\"Service Not Found \", \"Service Not Found\"));\r\n                        }\r\n                    });\r\n                }\r\n            } else {\r\n                res.status(400).json(errorJsonResponse(\"Invalid Request\", \"Invalid Request\"));\r\n            }\r\n        });\r\n    }\r\n    catch (Error) {\r\n        res.status(400).json(errorJsonResponse(Error.toString(), \"Invalid Image\"));\r\n    }\r\n}\r\n\r\nexport function deleteProduct(req, res, next) {\r\n    try {\r\n        if (req.params.productId) {\r\n            let productId = req.params.productId;\r\n\r\n            //Remove All the product from TeamMember\r\n            TeamMemberProduct.remove({product_id: productId}).exec((err, DeleteTeamMember) => {\r\n                if (DeleteTeamMember) {\r\n                    Product.remove({id: productId})\r\n                        .exec(function (err, DeleteTeam) {\r\n                            if (!err) {\r\n                                if (DeleteTeam) {\r\n                                    if (DeleteTeam.result.n === 1) {\r\n                                        setCache('productsHomeLists',null);\r\n                                        res.status(200)\r\n                                            .json({id: productId, result: 'Deleted Successfully'});\r\n                                    } else {\r\n                                        res.status(400)\r\n                                            .json(errorJsonResponse('Deleted Fail', 'Deleted Fail'));\r\n                                    }\r\n                                } else {\r\n                                    res.status(400)\r\n                                        .json(errorJsonResponse('Invalid Post', 'Invalid Post'));\r\n                                }\r\n                            } else {\r\n                                res.status(400)\r\n                                    .json(errorJsonResponse(err, 'Contact to your Developer'));\r\n                            }\r\n                        });\r\n                }\r\n            });\r\n        } else {\r\n            res.status(400)\r\n                .json(errorJsonResponse('Id is required', 'Id is required'));\r\n        }\r\n\r\n    } catch (error) {\r\n        res.status(400)\r\n            .json(errorJsonResponse(error, 'Contact to your Developer'));\r\n    }\r\n}\r\n\r\nexport function teamMember(req, res, next) {\r\n    try {\r\n        if (req.params.productId) {\r\n            let productId = req.params.productId;\r\n            return Product.aggregate([\r\n                {\r\n                    $match: {id: productId}\r\n                },\r\n                {\"$unwind\": \"$id\"},\r\n                {\r\n                    \"$lookup\": {\r\n                        \"from\": \"teams\",\r\n                        \"localField\": \"id\",\r\n                        \"foreignField\": \"product_id\",\r\n                        \"as\": \"TeamObjects\"\r\n                    }\r\n                },\r\n                {\r\n                    \"$group\": {\r\n                        \"_id\": \"$_id\",\r\n                        \"id\": {\"$first\": \"$id\"},\r\n                        \"title\": {\"$first\": \"$title\"},\r\n                        \"teamsMember\": {\"$first\": \"$TeamObjects\"}\r\n                    }\r\n                }\r\n            ]).exec()\r\n                .then(respondWithResult(res, 200))\r\n                .catch(handleError(res));\r\n        } else {\r\n            res.status(400)\r\n                .json(errorJsonResponse(\"Product Id is required\", \"Product Id is required\"));\r\n        }\r\n\r\n    } catch (error) {\r\n        res.status(400).json(errorJsonResponse(error, \"Contact to your Developer\"));\r\n    }\r\n}\r\n"]}
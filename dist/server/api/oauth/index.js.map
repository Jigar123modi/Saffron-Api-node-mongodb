{"version":3,"sources":["api/oauth/index.js"],"names":["express","require","controller","router","Router","get","validateAuthorization","index","validateAuthorizationUser","getTodayOrderList","index_contactNo","post","login","registerValidate","register","delete","deleteUserId","deleteUser","put","updateUser","uploadUserAvatar","changeUserBlockStatus","use","err","req","res","next","arrayMessages","allErrorField","i","errors","length","Single_error","messages","toString","replace","push","join","status","json","module","exports"],"mappings":"AAAA;;AAIA;;;;AACA;;;;AACA;;;;AAJA,IAAIA,UAAUC,QAAQ,SAAR,CAAd;AACA,IAAIC,aAAaD,QAAQ,oBAAR,CAAjB;;;AAKA,IAAIE,SAASH,QAAQI,MAAR,EAAb;;AAEA;AACAD,OAAOE,GAAP,CAAW,GAAX,EAAgB,qBAAYC,qBAA5B,EAAmDJ,WAAWK,KAA9D;;AAEA;AACAJ,OAAOE,GAAP,CAAW,oBAAX,EAAiC,qBAAYG,yBAA7C,EAAwEN,WAAWO,iBAAnF;;AAEA;AACAN,OAAOE,GAAP,CAAW,aAAX,EAA0B,qBAAYC,qBAAtC,EAA6DJ,WAAWQ,eAAxE;;AAEA;AACAP,OAAOQ,IAAP,CAAY,QAAZ,EAAsBT,WAAWU,KAAjC;;AAEA;AACAT,OAAOQ,IAAP,CAAY,WAAZ,EAAyB,iCAAS,qBAAYE,gBAArB,CAAzB,EAAiEX,WAAWY,QAA5E;;AAEA;AACAX,OAAOY,MAAP,CAAc,UAAd,EAA0B,qBAAYT,qBAAtC,EAA6D,iCAAS,qBAAYU,YAArB,CAA7D,EAAiGd,WAAWe,UAA5G;;AAEA;AACAd,OAAOe,GAAP,CAAW,GAAX,EAAgB,qBAAYV,yBAA5B,EAAuD,iCAAS,qBAAYW,UAArB,CAAvD,EAAyFjB,WAAWiB,UAApG;;AAEA;AACAhB,OAAOQ,IAAP,CAAY,aAAZ,EAA2B,qBAAYH,yBAAvC,EAAkEN,WAAWkB,gBAA7E;;AAEA;AACAjB,OAAOQ,IAAP,CAAY,wBAAZ,EAAsC,qBAAYL,qBAAlD,EAAyEJ,WAAWmB,qBAApF;;AAGAlB,OAAOmB,GAAP,CAAW,UAAUC,GAAV,EAAeC,GAAf,EAAoBC,GAApB,EAAyBC,IAAzB,EAA+B;AACtC,QAAIC,gBAAgB,EAApB;AACA,QAAIC,aAAJ;AACA,SAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIN,IAAIO,MAAJ,CAAWC,MAA/B,EAAuCF,GAAvC,EAA4C;AACxC,YAAIG,eAAeT,IAAIO,MAAJ,CAAWD,CAAX,EAAcI,QAAd,CAAuBC,QAAvB,GAAkCC,OAAlC,CAA0C,IAA1C,EAAgD,EAAhD,CAAnB;AACAR,sBAAcS,IAAd,CAAmBJ,YAAnB;AACH;AACDJ,oBAAgBD,cAAcU,IAAd,CAAmB,GAAnB,CAAhB;AACAZ,QAAIa,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,qCAAkBX,aAAlB,EAAiCA,aAAjC,CAArB;AACH,CATD;;AAWAY,OAAOC,OAAP,GAAiBtC,MAAjB","file":"index.js","sourcesContent":["'use strict';\r\n\r\nvar express = require('express');\r\nvar controller = require('./oauth.controller');\r\nimport validations from './validation';\r\nimport validate from 'express-validation';\r\nimport {errorJsonResponse} from '../../config/commonHelper';\r\n\r\nvar router = express.Router();\r\n\r\n// 01. GET   /api/oauth/\r\nrouter.get('/', validations.validateAuthorization, controller.index);\r\n\r\n//07 .  Get /api/oauth/changeUserBlockStatus\r\nrouter.get('/getTodayOrderList', validations.validateAuthorizationUser, controller.getTodayOrderList);\r\n\r\n//03 .  Get /api/oauth/:contactNumber\r\nrouter.get('/:contactNo', validations.validateAuthorization, controller.index_contactNo);\r\n\r\n// 02. POST   /api/oauth/login\r\nrouter.post('/login', controller.login);\r\n\r\n//03 . POST /api/oauth/register\r\nrouter.post('/register', validate(validations.registerValidate), controller.register);\r\n\r\n//04 . DELETE /api/oauth/delete\r\nrouter.delete('/:userId', validations.validateAuthorization, validate(validations.deleteUserId), controller.deleteUser);\r\n\r\n//05 . UPDATE /api/oauth/\r\nrouter.put('/', validations.validateAuthorizationUser, validate(validations.updateUser), controller.updateUser);\r\n\r\n//06 .  POST /api/oauth/userAvatar\r\nrouter.post('/userAvatar', validations.validateAuthorizationUser, controller.uploadUserAvatar);\r\n\r\n//07 .  POST /api/oauth/changeUserBlockStatus\r\nrouter.post('/changeUserBlockStatus', validations.validateAuthorization, controller.changeUserBlockStatus);\r\n\r\n\r\nrouter.use(function (err, req, res, next) {\r\n    let arrayMessages = [];\r\n    let allErrorField;\r\n    for (let i = 0; i < err.errors.length; i++) {\r\n        let Single_error = err.errors[i].messages.toString().replace(/\"/g, '');\r\n        arrayMessages.push(Single_error);\r\n    }\r\n    allErrorField = arrayMessages.join(\",\");\r\n    res.status(400).json(errorJsonResponse(allErrorField, allErrorField));\r\n});\r\n\r\nmodule.exports = router;\r\n"]}
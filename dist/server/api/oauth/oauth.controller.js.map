{"version":3,"sources":["api/oauth/oauth.controller.js"],"names":["req","res","next","userId","decoded","user","startDayDateTime","tz","startOf","format","endDayDateTime","endOf","NormalDateStartDateTime","Date","NormalDateEndDateTime","getCurrentDayOrders","find","customer_id","bookingEndTime","$gte","toUTCString","$lte","teamWiseProductList","sort","bookingDateTime","exec","UserPoints","findOne","saffronPoint","_id","status","json","TodayOrders","error","message","toString","getTodayOrderList","index","index_contactNo","login","register","updateUser","deleteUser","uploadUserAvatar","changeUserBlockStatus","formidable","require","fs","fs_extra","isImage","respondWithResult","statusCode","entity","handleError","err","send","role","__v","password","then","catch","contactNo","params","$regex","body","pass","check_field","block","loginUser","expiresIn","issued","now","accessToken","sign","jwtSecretKey","expires","add","first_name","last_name","mobile_number","email_id","alreadyAvailable","findUser","registrationUser","id","contact_no","image_url","save","RegistrationSuccess","data","result","emailAddress","old_mobile_number","userObject","update","UpdateUser","nModified","n","length","remove","DeleteUser","form","IncomingForm","parse","fields","files","filetoupload","name","uuid","oldpath","path","newpath","dbpath","renameFilePath","login_user","move","rename","UpdateOauth","requestObject"],"mappings":"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","file":"oauth.controller.js","sourcesContent":["import Oauth from './oauth.model';\nimport Booking from '../Booking/Booking.model';\nimport moment from 'moment/moment';\nimport {jwtdata, errorJsonResponse, getGuid, UserAvatarImageUploadLocation} from '../../config/commonHelper';\nimport jwt from 'jsonwebtoken';\n\nvar formidable = require('formidable');\nvar fs = require('fs');\nvar fs_extra = require('fs-extra');\nconst isImage = require('is-image');\n\nfunction respondWithResult(res, statusCode) {\n    statusCode = statusCode || 200;\n    return function(entity) {\n        if(entity) {\n            return res.status(statusCode)\n                .json(entity);\n        }\n        return null;\n    };\n}\n\nfunction handleError(res, statusCode) {\n    statusCode = statusCode || 500;\n    return function(err) {\n        res.status(statusCode)\n            .send(err);\n    };\n}\n\n// Gets a list of oauth\nexport function index(req, res) {\n    return Oauth.find({role: 'user'}, {_id: 0, __v: 0, password: 0})\n        .exec()\n        .then(respondWithResult(res, 200))\n        .catch(handleError(res));\n}\n\n// Get userList based on Mobile Number\nexport function index_contactNo(req, res) {\n    let contactNo = '^' + req.params.contactNo + '.*';\n    return Oauth.find({userId: {$regex: contactNo}, role: 'user'}, {_id: 0, __v: 0})\n        .exec()\n        .then(respondWithResult(res, 200))\n        .catch(handleError(res));\n}\n\n//Login Valid User\nexport function login(req, res) {\n    if(req.body) {\n        let pass;\n        let userId;\n        let check_field = true;\n\n        if(req.body.userId) {\n            userId = req.body.userId;\n            if(req.body.password) {\n                pass = req.body.password;\n            } else {\n                check_field = false;\n                res.status(500)\n                    .json(errorJsonResponse('password is required', 'password is required'));\n            }\n        } else {\n            check_field = false;\n            res.status(500)\n                .json(errorJsonResponse('userId is required', 'userId is required'));\n        }\n\n        if(check_field) {\n\n            Oauth.findOne({userId: userId, password: pass, block: false}, {_id: 0, __v: 0})\n                .exec(async function(err, loginUser) {\n                    if(!err) {\n                        if(loginUser) {\n                            let expiresIn = 60 * 60 * 24; // expires in 24 hours\n                            let issued = moment(Date.now());\n                            let accessToken = jwt.sign({user: loginUser}, jwtdata.jwtSecretKey, {\n                                expiresIn: expiresIn\n                            });\n                            let expires = moment(issued)\n                                .add(expiresIn, 'seconds');\n\n                            res.status(200)\n                                .json({\n                                    accessToken,\n                                    expiresIn,\n                                    issued,\n                                    expires\n                                });\n                        } else {\n                            res.status(400)\n                                .json(errorJsonResponse('Invalid user', 'Invalid user'));\n                        }\n                    } else {\n                        res.status(400)\n                            .json(errorJsonResponse(err, 'sorry, come to the shop.'));\n                    }\n                });\n        }\n    }\n}\n\nexport function register(req, res, next) {\n    if(req.body) {\n\n        let first_name = req.body.first_name;\n        let last_name = req.body.last_name;\n        let mobile_number = req.body.mobile_number;\n        let password = req.body.password;\n        let role = req.body.role;\n        let email_id = req.body.email_id;\n\n\n        try {\n\n            let alreadyAvailable = false;\n            //check mobile number is already register or not\n            Oauth.findOne({userId: mobile_number})\n                .exec(function(err, findUser) {\n\n                    if(findUser) {\n                        alreadyAvailable = true;\n                    }\n\n                    if(!alreadyAvailable) {\n\n                        let registrationUser = new Oauth({\n                            id: getGuid(),\n                            first_name: first_name,\n                            last_name: last_name,\n                            contact_no: mobile_number,\n                            email_id: email_id,\n                            userId: mobile_number,\n                            password: password,\n                            role: role,\n                            block: false,\n                            image_url: ''\n                        });\n                        registrationUser.save()\n                            .then(function(RegistrationSuccess, err) {\n                                if(!err) {\n                                    if(RegistrationSuccess) {\n\n                                        let expiresIn = 60 * 60 * 24; // expires in 24 hours\n                                        let issued = moment(Date.now());\n                                        let accessToken = jwt.sign({user: RegistrationSuccess}, jwtdata.jwtSecretKey, {\n                                            expiresIn: expiresIn\n                                        });\n                                        let expires = moment(issued)\n                                            .add(expiresIn, 'seconds');\n                                        res.status(200)\n                                            .json({\n                                                data: RegistrationSuccess,\n                                                accessToken,\n                                                expiresIn,\n                                                issued,\n                                                expires,\n                                                result: 'Registration Successfully'\n                                            });\n\n                                    } else {\n                                        res.status(400)\n                                            .json(errorJsonResponse('Error in db response', 'Invalid_Image'));\n                                    }\n                                } else {\n                                    res.status(400)\n                                        .json(errorJsonResponse(err, 'Contact to your Developer'));\n                                }\n                            });\n\n                    } else {\n                        res.status(400)\n                            .json(errorJsonResponse('Mobile number is already register', 'Mobile number is already register'));\n                    }\n                });\n        }\n        catch\n            (error) {\n            res.status(400)\n                .json(errorJsonResponse(error, 'contact to developer'));\n        }\n    }\n}\n\nexport function updateUser(req, res, next) {\n    if(req.body) {\n\n        let first_name = req.body.first_name;\n        let last_name = req.body.last_name;\n        let mobile_number = req.body.mobile_number;\n        let password = req.body.password;\n        let role = req.decoded.user.role;\n        let emailAddress = req.body.emailAddress;\n        let block = req.body.block;\n        let old_mobile_number = req.decoded.user.contact_no;\n\n        let userObject = {\n            id: req.decoded.user.id,\n            first_name: req.body.first_name,\n            last_name: req.body.last_name,\n            contact_no: req.body.mobile_number,\n            email_id: emailAddress,\n            userId: req.body.mobile_number,\n            image_url: req.body.image_url,\n            password: req.body.password,\n            role: role,\n            block: req.body.block,\n            _id: req.decoded.user._id\n        };\n\n\n        try {\n\n            if(mobile_number.toString() === old_mobile_number.toString()) {\n\n                Oauth.update({userId: old_mobile_number},\n                    {\n                        first_name: first_name,\n                        last_name: last_name,\n                        contact_no: mobile_number,\n                        email_id: emailAddress,\n                        userId: mobile_number,\n                        password: password,\n                        role: role,\n                        block: block\n                    }\n                )\n                    .exec(function(err, UpdateUser) {\n                        if(!err) {\n                            if(UpdateUser) {\n                                if(UpdateUser.nModified === 1 || UpdateUser.n === 1) {\n\n                                    let expiresIn = 60 * 60 * 24; // expires in 24 hours\n                                    let issued = moment(Date.now());\n                                    let accessToken = jwt.sign({user: userObject}, jwtdata.jwtSecretKey, {\n                                        expiresIn: expiresIn\n                                    });\n                                    let expires = moment(issued)\n                                        .add(expiresIn, 'seconds');\n                                    res.status(200)\n                                        .json({\n                                            accessToken,\n                                            expiresIn,\n                                            issued,\n                                            expires,\n                                            result: 'Updated Successfully'\n                                        });\n\n                                } else {\n                                    res.status(400)\n                                        .json(errorJsonResponse('not found', 'not found'));\n                                }\n\n                            } else {\n                                res.status(400)\n                                    .json(errorJsonResponse('Invalid_Image', 'Invalid_Image'));\n                            }\n                        } else {\n                            res.status(400)\n                                .json(errorJsonResponse(err, 'Contact to your Developer'));\n                        }\n                    });\n\n            } else {\n\n                let alreadyAvailable = false;\n                //check mobile number is already register or not\n                Oauth.find({userId: mobile_number})\n                    .exec(function(err, findUser) {\n\n                        if(findUser.length > 0) {\n                            alreadyAvailable = true;\n                        }\n\n                        if(!alreadyAvailable) {\n\n                            Oauth.update({userId: old_mobile_number},\n                                {\n                                    first_name: first_name,\n                                    last_name: last_name,\n                                    contact_no: mobile_number,\n                                    email_id: '',\n                                    userId: mobile_number,\n                                    password: password,\n                                    role: role,\n                                    block: block\n                                }\n                            )\n                                .exec(function(err, UpdateUser) {\n                                    if(!err) {\n                                        if(UpdateUser) {\n                                            if(UpdateUser.nModified === 1 || UpdateUser.n === 1) {\n\n                                                let expiresIn = 60 * 60 * 24; // expires in 24 hours\n                                                let issued = moment(Date.now());\n                                                let accessToken = jwt.sign({user: userObject}, jwtdata.jwtSecretKey, {\n                                                    expiresIn: expiresIn\n                                                });\n                                                let expires = moment(issued)\n                                                    .add(expiresIn, 'seconds');\n                                                res.status(200)\n                                                    .json({\n                                                        accessToken,\n                                                        expiresIn,\n                                                        issued,\n                                                        expires,\n                                                        result: 'Updated Successfully'\n                                                    });\n\n                                            } else {\n                                                res.status(400)\n                                                    .json(errorJsonResponse('Not Found', 'Not Found'));\n                                            }\n\n                                        } else {\n                                            res.status(400)\n                                                .json(errorJsonResponse('Invalid Image', 'Invalid Image'));\n                                        }\n                                    } else {\n                                        res.status(400)\n                                            .json(errorJsonResponse(err, 'Contact to your Developer'));\n                                    }\n                                });\n\n                        } else {\n                            res.status(400)\n                                .json(errorJsonResponse('Mobile number is already register', 'Mobile number is already register'));\n                        }\n                    });\n            }\n        }\n        catch\n            (error) {\n            res.status(400)\n                .json(errorJsonResponse(error, 'Contact to Developer'));\n        }\n    }\n}\n\nexport function deleteUser(req, res, next) {\n    try {\n        let userId = req.params.userId;\n        Oauth.remove({id: userId})\n            .exec(function(err, DeleteUser) {\n                if(!err) {\n                    if(DeleteUser) {\n                        if(DeleteUser.result.n === 1) {\n                            res.status(200)\n                                .json({id: userId, result: 'Deleted Successfully'});\n                        } else {\n                            res.status(400)\n                                .json(errorJsonResponse('Deleted Fail', 'Deleted Fail'));\n                        }\n\n                    } else {\n                        res.status(400)\n                            .json(errorJsonResponse('Invalid Post', 'Invalid Post'));\n                    }\n                } else {\n                    res.status(400)\n                        .json(errorJsonResponse(err, 'Contact to your Developer'));\n                }\n            });\n\n    } catch(error) {\n        res.status(400)\n            .json(error);\n    }\n}\n\nexport function uploadUserAvatar(req, res, next) {\n    try {\n\n        let form = new formidable.IncomingForm();\n        form.parse(req, function(err, fields, files) {\n\n            if(Object.keys(files).length > 0 && isImage(files.filetoupload.name)) {\n                let uuid = getGuid();\n                let oldpath = files.filetoupload.path;\n                let newpath = UserAvatarImageUploadLocation.path + files.filetoupload.name;\n                let dbpath = UserAvatarImageUploadLocation.dbpath + uuid + files.filetoupload.name;\n                let renameFilePath = UserAvatarImageUploadLocation.path + uuid + files.filetoupload.name;\n                let login_user = req.decoded;\n\n                fs_extra.move(oldpath, newpath, function(err) {\n                    if(err) {\n                        res.status(400)\n                            .json(errorJsonResponse(err.toString(), 'Same Name Image Already Available On Server'));\n                    } else {\n                        fs.rename(newpath, renameFilePath, function(err) {\n                            if(err) {\n                                res.status(400)\n                                    .json(errorJsonResponse(err.toString(), 'Fail to Rename file'));\n                            } else {\n                                Oauth.update({userId: login_user.user.userId}, {\n                                    image_url: dbpath,\n                                })\n                                    .exec(function(err, UpdateOauth) {\n                                        if(!err) {\n                                            if(UpdateOauth) {\n                                                if(UpdateOauth.nModified === 1 || UpdateOauth.n === 1) {\n                                                    res.status(200)\n                                                        .json({\n                                                            data: dbpath,\n                                                            result: 'updated Successfully '\n                                                        });\n                                                } else {\n                                                    res.status(400)\n                                                        .json(errorJsonResponse('not found', 'not found'));\n                                                }\n                                            } else {\n                                                res.status(400)\n                                                    .json(errorJsonResponse('Invalid_Image', 'Invalid_Image'));\n                                            }\n                                        } else {\n                                            res.status(400)\n                                                .json(errorJsonResponse(err, 'Contact to your Developer'));\n                                        }\n                                    });\n                            }\n                        });\n                    }\n                });\n            } else {\n                res.status(400)\n                    .json(errorJsonResponse('Invalid Request', 'Invalid Request'));\n            }\n        });\n    }\n    catch(error) {\n        res.status(400)\n            .json(errorJsonResponse(error.message.toString(), error.message.toString()));\n    }\n}\n\nexport function changeUserBlockStatus(req, res, next) {\n    if(req.body) {\n\n        let requestObject = {\n            contact_no: req.body.mobile_number,\n            block: req.body.block,\n        };\n\n        try {\n            Oauth.update({userId: requestObject.contact_no},\n                {\n                    block: requestObject.block\n                }\n            )\n                .exec(function(err, UpdateUser) {\n                    if(!err) {\n                        if(UpdateUser) {\n                            if(UpdateUser.nModified === 1 || UpdateUser.n === 1) {\n\n                                res.status(200)\n                                    .json({\n                                        data: requestObject,\n                                        result: 'Updated Successfully'\n                                    });\n\n                            } else {\n                                res.status(400)\n                                    .json(errorJsonResponse('not found', 'not found'));\n                            }\n\n                        } else {\n                            res.status(400)\n                                .json(errorJsonResponse('Result Null', 'Result Null'));\n                        }\n                    } else {\n                        res.status(400)\n                            .json(errorJsonResponse(err, 'Sorry retry again'));\n                    }\n                });\n        }\n        catch(error) {\n            res.status(400)\n                .json(errorJsonResponse(error.message.toString(), 'Contact to your Developer'));\n        }\n    }\n}\n\nexport async function getTodayOrderList(req, res, next) {\n    try {\n        let userId = req.decoded.user.userId;\n        let startDayDateTime = moment()\n            .tz('Asia/Kolkata')\n            .startOf('day')\n            .format();\n        let endDayDateTime = moment()\n            .tz('Asia/Kolkata')\n            .endOf('day')\n            .format();\n        let NormalDateStartDateTime = new Date(startDayDateTime);\n        let NormalDateEndDateTime = new Date(endDayDateTime);\n\n        const getCurrentDayOrders = await Booking.find({\n            customer_id: userId,\n            bookingEndTime: {\n                $gte: NormalDateStartDateTime.toUTCString(),\n                $lte: NormalDateEndDateTime.toUTCString()\n            }\n        }, {teamWiseProductList: 0})\n            .sort({bookingDateTime: -1})\n            .exec();\n\n        let UserPoints = await Oauth.findOne({userId: userId}, {saffronPoint: 1, _id: 0})\n            .exec();\n\n        res.status(200)\n            .json({\n                TodayOrders: getCurrentDayOrders,\n                UserPoints\n            });\n\n    } catch(error) {\n        res.status(400)\n            .json(errorJsonResponse(error.message.toString(), 'Contact to your Developer'));\n    }\n}\n\n"]}
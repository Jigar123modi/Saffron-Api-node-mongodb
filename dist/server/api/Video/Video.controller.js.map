{"version":3,"sources":["api/Video/Video.controller.js"],"names":["service_id","uniqueId","index","VideoList","singleServiceVideoList","filter","data","find","_id","__v","sort","date","exec","getVideoList","writeLog","eLogLevel","error","req","res","params","serviceId","videoList","status","json","allVideos","deleteVideo","addNewVideo","updateGallery","videoId","remove","id","err","DeleteVideo","result","n","next","request","body","video_url","title","description","sex","findOne","findService","VideoNewAdd","Date","toISOString","save","then","InsertService","Error","toString","update","image_url","dbpath","UpdateVideo","nModified"],"mappings":"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","file":"Video.controller.js","sourcesContent":["import Video from './Video.model';\r\nimport Service from '../Service/Service.model';\r\nimport {errorJsonResponse, getCache, getGuid, setCache} from '../../config/commonHelper';\r\nimport Oauth from '../oauth/oauth.model';\r\nimport TeamMemberProduct from '../TeamMemberProduct/TeamMemberProduct.model';\r\nimport Log from '../../config/Log';\r\n\r\n\r\nasync function getVideoList(service_id,uniqueId, index = 0) {\r\n    let VideoList = getCache('videoList');\r\n    if(VideoList !== null) {\r\n        let singleServiceVideoList = VideoList.filter((data) => data.service_id === service_id);\r\n        if(singleServiceVideoList) {\r\n            return singleServiceVideoList;\r\n        } else {\r\n            if(index === 0) {\r\n                VideoList = await Video.find({}, {_id: 0, __v: 0}).sort({date: -1}).exec();\r\n                setCache('videoList', VideoList);\r\n                return getVideoList(service_id,uniqueId, 1);\r\n            } else {\r\n                Log.writeLog(Log.eLogLevel.error, `[getVideoList] : Record not found Service_Id = ${service_id}`, uniqueId);\r\n                return null;\r\n            }\r\n        }\r\n    } else {\r\n        VideoList = await Video.find({}, {_id: 0, __v: 0}).sort({date: -1}).exec();\r\n        setCache('videoList', VideoList);\r\n        return getVideoList(service_id,uniqueId, 1);\r\n    }\r\n}\r\n\r\n\r\n// Gets all the Videos\r\nexport async function allVideos(req, res) {\r\n    if (req.params.serviceId) {\r\n        const uniqueId = getGuid();\r\n        let videoList = await getVideoList(req.params.serviceId, uniqueId);\r\n        res.status(200).json(videoList);\r\n    }\r\n}\r\n\r\n\r\nexport function deleteVideo(req, res) {\r\n    if (req.params.videoId) {\r\n        let videoId = req.params.videoId;\r\n        Video.remove({id: videoId})\r\n            .exec(function (err, DeleteVideo) {\r\n                if (!err) {\r\n                    if (DeleteVideo) {\r\n                        if (DeleteVideo.result.n === 1) {\r\n                            setCache('videoList', null);\r\n                            res.status(200)\r\n                                .json({id: videoId, result: \"Deleted Successfully\"});\r\n                        } else {\r\n                            res.status(400)\r\n                                .json(errorJsonResponse(\"Deleted Fail\", \"Deleted Fail\"));\r\n                        }\r\n\r\n                    } else {\r\n                        res.status(400)\r\n                            .json(errorJsonResponse(\"Invalid Post\", \"Invalid Post\"));\r\n                    }\r\n                } else {\r\n                    res.status(400)\r\n                        .json(errorJsonResponse(err, \"Contact to your Developer\"));\r\n                }\r\n            });\r\n    } else {\r\n        res.status(400)\r\n            .json(errorJsonResponse(\"Id is required\", \"Id is required\"));\r\n    }\r\n}\r\n\r\nexport function addNewVideo(req, res, next) {\r\n    try {\r\n\r\n        let request = {\r\n            service_id: req.body.service_id,\r\n            video_url: req.body.video_url,\r\n            title: req.body.title,\r\n            description: req.body.description,\r\n            sex: req.body.sex\r\n        };\r\n\r\n        Service.findOne({id: request.service_id}).exec(function (err, findService) {\r\n            if (findService) {\r\n                let VideoNewAdd = new Video({\r\n                    id: getGuid(),\r\n                    service_id: request.service_id,\r\n                    video_url: request.video_url,\r\n                    title: request.title,\r\n                    description: request.description,\r\n                    date: new Date().toISOString(),\r\n                    sex: request.sex\r\n                });\r\n                VideoNewAdd.save()\r\n                    .then(function (InsertService, err) {\r\n                        if (!err) {\r\n                            if (InsertService) {\r\n                                setCache('videoList', null);\r\n                                res.status(200)\r\n                                    .json({\r\n                                        data: InsertService,\r\n                                        result: \"Save Successfully\"\r\n                                    });\r\n                            } else {\r\n                                res.status(400)\r\n                                    .json(errorJsonResponse(\"Error in db response\", \"Invalid_Image\"));\r\n                            }\r\n                        } else {\r\n                            res.status(400)\r\n                                .json(errorJsonResponse(err, \"Contact to your Developer\"));\r\n                        }\r\n                    });\r\n            }\r\n            else {\r\n                res.status(400)\r\n                    .json(errorJsonResponse(\"Service Not Found \", \"Service Not Found\"));\r\n            }\r\n        });\r\n    }\r\n    catch (Error) {\r\n        res.status(400).json(errorJsonResponse(Error.toString(), Error.toString()));\r\n    }\r\n}\r\n\r\nexport function updateGallery(req, res, next) {\r\n    try {\r\n\r\n        let request = {\r\n            id: req.body.id,\r\n            service_id: req.body.service_id,\r\n            video_url: req.body.video_url,\r\n            title: req.body.title,\r\n            description: req.body.description,\r\n            sex: req.body.sex\r\n        };\r\n\r\n        Service.findOne({id: request.service_id}).exec(function (err, findService) {\r\n            if (findService) {\r\n                Video.update({id: request.id}, {\r\n                    service_id: request.service_id,\r\n                    image_url: request.dbpath,\r\n                    title: request.title,\r\n                    description: request.description,\r\n                    date: new Date().toISOString(),\r\n                    sex: request.sex\r\n                }).exec(function (err, UpdateVideo) {\r\n                    if (!err) {\r\n                        if (UpdateVideo) {\r\n                            if (UpdateVideo.nModified === 1 || UpdateVideo.n === 1) {\r\n                                setCache('videoList', null);\r\n                                res.status(200)\r\n                                    .json({\r\n                                        data: request,\r\n                                        result: \"updated Successfully \"\r\n                                    });\r\n\r\n                            } else {\r\n                                res.status(400)\r\n                                    .json(errorJsonResponse(\"Record not found\", \"Record not found\"));\r\n                            }\r\n\r\n                        } else {\r\n                            res.status(400)\r\n                                .json(errorJsonResponse(err, \"Contact to your Developer\"));\r\n                        }\r\n                    } else {\r\n                        res.status(400)\r\n                            .json(errorJsonResponse(err, \"Contact to your Developer\"));\r\n                    }\r\n                });\r\n\r\n            } else {\r\n                res.status(400)\r\n                    .json(errorJsonResponse(\"Service Not Found \", \"Service Not Found\"));\r\n            }\r\n        });\r\n    }\r\n    catch (Error) {\r\n        res.status(400).json(errorJsonResponse(Error.toString(), Error.toString()));\r\n    }\r\n}\r\n"]}